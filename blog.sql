-- MySQL dump 10.13  Distrib 5.7.21, for Linux (x86_64)
--
-- Host: localhost    Database: blog
-- ------------------------------------------------------
-- Server version	5.7.21-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `typecho_comments`
--

DROP TABLE IF EXISTS `typecho_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `typecho_comments` (
  `coid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cid` int(10) unsigned DEFAULT '0',
  `created` int(10) unsigned DEFAULT '0',
  `author` varchar(200) DEFAULT NULL,
  `authorId` int(10) unsigned DEFAULT '0',
  `ownerId` int(10) unsigned DEFAULT '0',
  `mail` varchar(200) DEFAULT NULL,
  `url` varchar(200) DEFAULT NULL,
  `ip` varchar(64) DEFAULT NULL,
  `agent` varchar(200) DEFAULT NULL,
  `text` text,
  `type` varchar(16) DEFAULT 'comment',
  `status` varchar(16) DEFAULT 'approved',
  `parent` int(10) unsigned DEFAULT '0',
  PRIMARY KEY (`coid`),
  KEY `cid` (`cid`),
  KEY `created` (`created`)
) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `typecho_comments`
--

LOCK TABLES `typecho_comments` WRITE;
/*!40000 ALTER TABLE `typecho_comments` DISABLE KEYS */;
INSERT INTO `typecho_comments` VALUES (4,10,1464102788,'念',0,1,NULL,NULL,'119.119.28.54','Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1','不懂，好流弊的样子','comment','approved',0),(3,6,1463750294,'Rogue',0,1,'2691650444@qq.com','http://www.rootlm.com','42.234.41.140','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36','Hello world！必须专业','comment','approved',0),(5,28,1478580094,'玖音',0,1,'mainkes@gmail.com','http://n.kissliu.com','218.29.47.226','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.87 Safari/537.36','多谢多谢~~','comment','approved',0),(6,11,1478590586,'玖音',0,1,'mainkes@gmail.com','http://n.kissliu.com','218.29.47.226','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.87 Safari/537.36','报错报错。图片挂了。','comment','approved',0),(7,11,1479179998,'black',1,1,'1992black@rootblack.com','http://www.rootblack.com','106.38.206.162','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36','图片挂了的问题已经修复','comment','approved',6),(8,2,1482848310,'暮',0,1,'cmmx@cmmx.cc','https://cmmx.cc','118.206.186.67','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36','特效好棒！博主好人一生平安 你懂的！','comment','approved',0),(9,67,1482967305,'yxw',0,1,NULL,NULL,'123.151.42.52','Mozilla/5.0 (Linux; Android 6.0.1; SM-G9300 Build/MMB29M) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Mobile MQQBrowser/6.8 TBS/036887 Safari/537.36 MicroMessenger/6.5.2.960 Net','各种坑','comment','approved',0),(10,48,1485191909,'玖音',0,1,'me@soulans.me','http://n.kissliu.com','42.234.56.6','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36','这是个好东西','comment','approved',0),(11,2,1492314042,'是我',0,1,'abc@gmail.vom','http://example.com','45.32.12.168','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.98 Safari/537.36 OPR/44.0.2510.857','说出你的故事，开始你的表演、','comment','approved',0);
/*!40000 ALTER TABLE `typecho_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `typecho_contents`
--

DROP TABLE IF EXISTS `typecho_contents`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `typecho_contents` (
  `cid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(200) DEFAULT NULL,
  `slug` varchar(200) DEFAULT NULL,
  `created` int(10) unsigned DEFAULT '0',
  `modified` int(10) unsigned DEFAULT '0',
  `text` text,
  `order` int(10) unsigned DEFAULT '0',
  `authorId` int(10) unsigned DEFAULT '0',
  `template` varchar(32) DEFAULT NULL,
  `type` varchar(16) DEFAULT 'post',
  `status` varchar(16) DEFAULT 'publish',
  `password` varchar(32) DEFAULT NULL,
  `commentsNum` int(10) unsigned DEFAULT '0',
  `allowComment` char(1) DEFAULT '0',
  `allowPing` char(1) DEFAULT '0',
  `allowFeed` char(1) DEFAULT '0',
  `parent` int(10) unsigned DEFAULT '0',
  PRIMARY KEY (`cid`),
  UNIQUE KEY `slug` (`slug`),
  KEY `created` (`created`)
) ENGINE=MyISAM AUTO_INCREMENT=111 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `typecho_contents`
--

LOCK TABLES `typecho_contents` WRITE;
/*!40000 ALTER TABLE `typecho_contents` DISABLE KEYS */;
INSERT INTO `typecho_contents` VALUES (6,'Hello World','6',1463748660,1463748822,'<!--markdown-->作为一个码农, 用Hello World开头才显得专业',0,1,NULL,'post','publish',NULL,1,'1','0','1',0),(2,'关于','start-page',1463583420,1484184519,'<!--markdown-->你想知道什么, 难道是我的生平事迹...',0,1,NULL,'page','publish',NULL,2,'1','1','1',0),(7,'Qt中的文件重定向','7',1464048600,1464097052,'<!--markdown-->今天找到了一个能够查看本机硬盘S/N码的软件, 想把这个功能集成到公司的软件中, 以做机器绑定功能. \n本身打算集成到我司的Qt代码中去, 但是及其蛋疼的不知为何集成上去之后只能查看到本机的MAC地址, 却无法显示出来硬盘的S/N等各种信息. \n\n\n<!--more-->\n\n\n然后就想到利用Qt的QProcess来执行cmd命令, 然后读取cmd命令的返回值再经过处理存入文件. 然而... 找了好多说法, 最后没有一个成功的, 不要问我为什么, 我也想知道为什么. (如果有谁知道请告诉我, 不胜感激)\n最后实在是没办法了, 就想到了cmd命令的管道重定向功能来生成文本, 然后读取生成的文本再做处理, 结果用QProcess中的start以及excute函数来直接处理字符串还是失败了, 最终虽然能生成文件, 但是怎么也不能把内容重定向进去. \nFinally, 终于特么让我找到了一个能成功的办法.\n原来Qt的重定向功能在QProcess中已经有函数带上了, 下面我就放出用法:\n\n    QProcess process;\n    process_new.setStandardOutputFile(out_file_path);\n    process_new.start(run_file_path);\n    process_new.waitForFinished();\n\n如此便可将文件的输出内容重定向到out_file_path中.\n果然学计算机还真是容易让人蛋碎一地, 就这几行代码实现的功能, 我得研究了两个小时, 果然作为菜鸡的我伤不起啊.\n如果有什么更好的办法或者我之前没搞定的问题各位看客有答案的话, 请告诉我, 在此不胜感激.',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(8,'DiskID32-可以查看硬盘S/N码以及其他信息的软件','8',1464051120,1464097021,'<!--markdown-->现放出刚刚在上一个日志中提到的软件, DiskID32\n\n\n<!--more-->\n\n\n官网地址[DiskID32][1]\n\n\n  [1]: https://www.winsim.com/diskid32/diskid32.html\n\n使用方法就是在cmd里面找到DiskID32.exe文件所在处, 然后输入DiskID32.exe即可\n也可以使用DiskID32.exe /d来获取更多相关信息',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(10,'简单使用Cypress的经历','10',1464095220,1464103115,'<!--markdown-->今天我司给我布置了一个任务, 让我写个软件跟硬件设备沟通并发送消息, 由于我是软件工程出身的, 所以并没有过这种经历, 这种经历对我来说还是很难得的, 所以我当然要分享一下对我来说这么令(dan)人(sui)兴(yi)奋(di)的消息, 希望我Boss不会一不小心看到我这个分享, 然后再一不小心怒发冲冠, 然后再一不小心把我踢出公司, 下面, 我就先来说说Cypress这个东西\n\n\n<!--more-->\n\n\nCypress, 据百度知道了解, 是一个非常流弊的电子芯片制造公司, 我用的当然不是这个公司的东西, 而是用这个公司所给的API来跟某个硬件设备进行通信. \n\n当然我要说的并不是这个公司, 而是这次代码里面我用到的此公司的API吧, 虽然我不会, 然而我还是很流弊的写出了300行的代码, 2333\n\n其实总结一下, 我写的破代码, 就两个功能, \n功能一, 对于指定的usb设备进行初始化, 已方便沟通.\n功能二, 通过然后通过API中的XferData函数向设备发送设备认识的命令, 其实就是发送一个BYTE的数组而已\n\n既然我说了这么多废话, 耽误了诸位客观的时间, 那就让我再贴点代码来再耽误诸位客观的时间吧, 顺便也帮我自己做个备注\n\n    int InitUSBPort(HANDLE handle)    //这里的handle其实我一直都不知道是什么意思, 之知道是一个句柄, 可以是窗口句柄, 也可以是别的, 但是一般传递的时候都是m_hWnd, 恩, 我查到的资料就是告诉我是m_hWnd, 马丹, 作为一个不写底层的人怎么会知道什么是m_hWnd, 就这么简单的说真的好么, 然后我又凭借我多年的经验(PS: 其实就是神蒙盖世), 我果断用了NULL, 结果发现, 居然特么对了, 老天就是这么有意思, 总是在你绝望的时候给你惊喜\n    {\n        FX2Device = new CCyUSBDevice(handle);\n        FX2Device->Open(0);\n        if (FX2Device->IsOpen())\n        {\n           FX2Device->ControlEndPt->ReqType = REQ_VENDOR;\n           FX2Device->ControlEndPt->Target = TGT_DEVICE;\n        }\n        else\n        {\n            return 0;\n        }\n    \n        if(FX2Device->VendorID == usb驱动的VendorID && FX2Device->ProductID == usb驱动的ProductID)这两个ID可以在设备管理器, 你要通讯的usb驱动的属性界面查到\n        {\n               RspPt = FX2Device->EndPointOf(0x84);      //EndPointer[84]->For receive respond\n               CmdPt = FX2Device->EndPointOf(0x08);      //EndPointer[08]->For send cmd\n           CmdPt->TimeOut = 1000;\n           RspPt->TimeOut = 1000;    // cmd setting timeout\n    \n           InPt = FX2Device->EndPointOf(0x82);       //EndPointer[82]->For receive data\n           OutPt = FX2Device->EndPointOf(0x06);      //EndPointer[06]->For send data\n           InPt->TimeOut = 1000;\n           OutPt->TimeOut = 1000;\n    \n            return 1;\n        }\n        return 0;\n    }\n\n    int SendMsg()\n    {\n        long cmdLen = CMD_SIZE;\n        BYTE byCmdBuf[CMD_SIZE] = { 0 };    \n        BYTE byRspBuf[CMD_SIZE] = { 0 };    //当然, byRspBuf与byCmdBuf是一样的, 需要根据所给定的usb协议来自定义byCmdBuf的每个字段\n    \n        bool ret=CmdPt->XferData(byCmdBuf,cmdLen);\n        if( false == ret )\n        {\n            return 0;\n        }\n    \n        // step 2 check response bit 3\n        cmdLen = CMD_SIZE;\n        ret=RspPt->XferData(byRspBuf,cmdLen);\n        if( false == ret )\n        {\n            return 0;\n        }\n    \n        for (int i = 0; i < CMD_SIZE; i++)\n        {\n            printf(\"%d \", byRspBuf[i]);\n        }\n\n        if(memcmp(byRspBuf,byRspOK,CMD_SIZE) == 0)\n            return 1;\n    \n        return 0;\n    }\n\n就这么多吧, 反正我也不会, 贴代码只是为了自己记得下次碰到怎么写, 说这么多废话只是因为朋友们都说我Blog里面没话说, 好空档, 希望我Boss和这次跟我对接的硬件工程师看到我这个Blog不会来打死我, 哈哈~~~\n晚安, 诸位\n',0,1,NULL,'post','publish',NULL,1,'1','0','1',0),(11,'纪念掉坑的一次, 用Qt的setWorkingDirectory()函数','11',1464235620,1479179973,'<!--markdown-->那天出差, 领导突然告诉我一个不幸的消息, 就是我软件中现在使用的算法有问题, 然后他电脑里面现在没有新的dll可供我使用, 只能给我3个exe文件让我在需要使用的文件夹中调用, What A Fucking Day...\n\n\n<!--more-->\n\n\n然而, 像我这么聪(sha)明(bi)的人怎么会甘愿用那么笨的方法呢, 所以我就在代码里动态把需要使用的exe复制到需要使用的文件夹中, 然后再调用, 有没有感觉666的.\n\n然而, 理想是美好的, 我调用之后总是提示找不到文件, 然后我突然想起来, 调用外部文件这种东西, 外部文件默认使用的路径是特喵的你调用使用的软件的路径, 这当然不可以啊, 然后我就找我Boss, 问他是不是直接在本文件夹找的文件, 他告诉我-_-! 是的...\n\nPS: 说一下在本地文件夹找文件和正常找文件的区别\n本地文件找文件:\n\n    file_path = \"a.exe\";\n正常找文件:\n\n    location = ApplicationPath();\n    file_path = location + \"a.exe\";\n\n区别就是第一个使用的是相对路径, 也就是相对于你运行的文件的路径, 第二个是使用绝对路径, 虽然看起来都是一样的, 但是当你这个软件被外部调用的时候就能看出来区别了, 还有一个地方会碰到这种情况, 就是在你流弊的把编辑器改成带编译功能的时候, 用第一个方法经常会找不到文件(不要问我为什么知道, 才不会告诉你我以前改Notepad++的时候经常遇到, 因为这件事傻逼了很久)\n\n好, 接下来继续说经历, 我在经历了漫长的等待之后, Boss搞定了, 然后弱弱的告诉了我一句, 好像还是不行(不要问我为什么不行, 当时着急, 而且我也没有源代码, 没法过后测试), 然后告诉我说QProcess里面有个setWorkingDirectory()函数可以用, 我就乐呵乐呵的去用了, 然后重点来了, 马丹, 居然不好使, What A Fucking Day...\n\n然后我查了一下资料, 查到以下资料:\n![wrong.jpg][1]\n\nWhat A Fucking Day...\n\n幸亏那个资料里面有个人给出了正确的方法\n![ans.jpg][2]\n\n然后顺利搞定, 在此对那位大神表示感谢\n\n咳咳, 每次都不知道怎么收尾, 那就这样烂尾好了, 反正又没指望有人会看, 自己留着做备注就好啦~~~!\nBy The Way:\n放出查到的那篇文章的:[地址][3]\n\n\n  [1]: http://www.rootblack.com/usr/uploads/2016/05/3024731315.jpg\n  [2]: http://www.rootblack.com/usr/uploads/2016/05/3606503454.jpg\n  [3]: http://www.qtforum.org/article/15350/qprocess-setworkingdirectory-problem.html',0,1,NULL,'post','publish',NULL,2,'1','0','1',0),(15,'wrong-11.jpg','wrong11-jpg',1464236182,1465191097,'a:8:{s:4:\"name\";s:9:\"wrong.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2016/05/3024731315.jpg\";s:4:\"size\";i:192772;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";s:7:\"isImage\";b:1;s:3:\"url\";s:59:\"http://www.rootblack.com/usr/uploads/2016/05/3024731315.jpg\";s:11:\"description\";N;}',1,1,NULL,'attachment','publish',NULL,0,'1','0','1',11),(16,'ans-11.jpg','ans11-jpg',1464236247,1465191093,'a:8:{s:4:\"name\";s:7:\"ans.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2016/05/3606503454.jpg\";s:4:\"size\";i:50287;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";s:7:\"isImage\";b:1;s:3:\"url\";s:59:\"http://www.rootblack.com/usr/uploads/2016/05/3606503454.jpg\";s:11:\"description\";N;}',2,1,NULL,'attachment','publish',NULL,0,'1','0','1',11),(45,'Unnamed QQ Screenshot20161124085351.png','Unnamed-QQ-Screenshot20161124085351-png',1479948845,1479948845,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20161124085351.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/11/3542166461.png\";s:4:\"size\";i:30292;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',1,1,NULL,'attachment','publish',NULL,0,'1','0','1',46),(46,'Java配置环境变量','46',1479948840,1479948915,'<!--markdown-->做个记录吧\n\n\n<!--more-->\n\n我的电脑, 右键-属性-高级系统设置-环境变量\n![Unnamed QQ Screenshot20161124085351.png][1]\n添加如下键值, 其中JAVA_HOME为Java所安装的位置\n\n    JAVA_HOME\n    C:\\Program Files\\Java\\jdk1.8.0_112\n    CLASSPATH\n    .;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar\n    Path\n    %JAVA_HOME%\\bin; %JAVA_HOME%\\jre\\bin;\n\n\n  [1]: http://www.rootblack.com/usr/uploads/2016/11/3542166461.png',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(18,'最新Debian源(亲测有效)','18',1465282560,1465286647,'<!--markdown-->    deb http://mirrors.163.com/debian/ jessie main\n    deb-src http://mirrors.163.com/debian/ jessie main\n    \n    deb http://security.debian.org/ jessie/updates main contrib\n    deb-src http://security.debian.org/ jessie/updates main contrib\n    \n    # jessie-updates, previously known as \'volatile\'\n    deb http://mirrors.163.com/debian/ jessie-updates main contrib\n    deb-src http://mirrors.163.com/debian/ jessie-updates main contrib',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(19,'raspberrypi vnc安装与配置(转载)','19',1465286520,1465286636,'<!--markdown-->此文仅仅作为一个对我来说快速查找的文章, 没有任何其他意义\n\n    sudo apt-get install tightvncserver\n    tightvncserver\n    vncserver :1 -geometry 1920x1080 -depth 24\n\n我记得以前干掉树莓派的源之后是没有这个vnc的, 所以我顺便贴一下树莓派的源, 省得在别的linux下用蛋疼:\n\n    deb http://mirrordirector.raspbian.org/raspbian/ jessie main contrib non-free rpi\n    # Uncomment line below then \'apt-get update\' to enable \'apt-get source\'\n    #deb-src http://archive.raspbian.org/raspbian/ jessie main contrib non-free rpi\n\n下面我应该人道的贴一下转载的[地址][1]\n\n\n以及那个vnc的[主页][2]\n\n\n  [1]: https://www.raspberrypi.org/documentation/remote-access/vnc/\n  [2]: http://www.tightvnc.com/',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(20,'树莓派添加中文支持','20',1469692380,1479285860,'<!--markdown-->    sudo apt-get update \n    \n    sudo apt-get install ttf-wqy-microhei\n    \n    sudo dpkg-reconfigure locales\n\n然后再弹出框中选中所有zh-cn开头的项, 用空格选中, 回车确定就可以了',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(21,'替换文件夹下所有指定格式文件的内容(包括子文件夹内)-Python','21',1470475740,1479285853,'<!--markdown-->    # -*-coding:utf-8-*-\n    import os\n    import re\n    \n\n\n<!--more-->\n\n\n    ROOTDIR = os.getcwd()    #这里是将文件运行所在文件夹设置为根文件夹\n    SUFFIX = \'html\'    #一个文件后缀的Flag\n    REGEXSTR = r\'(<div id=\"KeFuDiv\".*?KeFuDiv\\\'\\);)\'    #正则表达式, 用来查找需要被替换的字符串\n    TMPFLAG = \'www.rootblack.com\'    #这里是个Flag, 在文件读取的时候是有换行的, 在匹配的时候有换行的话无法正确\n    #匹配, 不知道为什么, 反正我在做测试的时候这里卡了好久, 所以我把所有\'\\n\'替换成一个在那个文件里绝对不会出现的字符串, \n    #然后完成匹配, 等结束后再替换成\'\\n\'\n    \n    def FindDirsInDir(dir): #通过递归获取ROOTDIR目录下的所有子文件夹\n    	dir_list = [dir + \'\\\\\' + dir_tmp for dir_tmp in os.listdir(dir) if os.path.isdir(dir + \'\\\\\' + dir_tmp)] \n    	if len(dir_list) == 0:\n    		return []\n    	for single_dir in dir_list:\n    		dir_list += FindDirsInDir(single_dir)\n    	return dir_list \n    \n    def FindFilesInSuffix(dir):    #这里是用来查找指定目录下的所有指定后缀的文件\n    	file_list = [dir + \'\\\\\' + file for file in os.listdir(dir) if \'.\' in file and file.split(\'.\')[1] == SUFFIX] \n    	return file_list\n    \n    def ReplaceStrInFile(file):    #由于内容较大, 所以我选择通过正则表达式来替换, 如果是小内容的话, 可以改成用\n    #replace直接替换字符串, 由于是直接在原文件中修改, 不用备份, 所以我第一次打开文件用读取属性, 然后在写入之前关闭并再\n    #次用写入属性打开并直接写入, 我记得有读写属性, 我试了r+的打开方式, 但是写入的时候报错, 不知道为什么, 由于时间问题我\n    #也没有尝试别的办法, 就先这样吧\n    	f_open = open(file, \'r\')\n    	content = f_open.read().replace(\'\\n\', TMPFLAG)\n    	ans = re.findall(REGEXSTR, content)\n        if len(ans) == 0:    #这里判断读取的文件中是否有指定字符串\n		return ;\n    	content = re.sub(REGEXSTR, \'\', content)\n    	f_open.close()\n    	content = content.replace(TMPFLAG, \'\\n\')\n    	f_open = open(file, \'w\')\n    	f_open.write(content)\n    	f_open.close()\n    	print \'Replace File\', file\n    	\n    if __name__ == \'__main__\':\n    	print ROOTDIR\n    	dir_list = FindDirsInDir(ROOTDIR)\n    	file_list = []\n    	file_list += FindFilesInSuffix(ROOTDIR)    #获取根文件夹下所有文件\n    	for dir in dir_list:    #获取所有子文件夹下的所有文件\n    		file_list += FindFilesInSuffix(dir)\n    	\n    	for file in file_list:\n    		ReplaceStrInFile(file)',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(22,'Python爬区拉勾网(重点:HttpPost)','22',1470833340,1479285848,'<!--markdown-->先把代码贴上来做个备份, 回头再整理\n\n\n<!--more-->\n\n\n    # -*-coding:utf-8-*-\n    \n    import re\n    import json\n    import time\n    import urllib\n    import urllib2\n    \n    URL = r\'http://www.lagou.com/jobs/positionAjax.json?px=default&city=%E6%B7%B1%E5%9C%B3&needAddtionalResult=false\'\n    REGEXSTR = r\'(<dd class=\"job_bt.*?/dd>)\'\n    TMPFLAG = \'www.rootblack.com\'\n    \n    def read_page(url):\n    	return urllib2.urlopen(url).read()\n    	\n    def read_page_post(url, page_num, keyword):  \n    	page_headers = {\n    		\'Host\': \'www.lagou.com\',\n    		\'User-Agent\': \'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) \'\n    					  \'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3\',\n    		\'Connection\': \'keep-alive\'\n    		}\n    	if page_num == 1:\n    		boo = \'true\'\n    	else:\n    		boo = \'false\'\n    	page_data = {\n    		\'first\': boo, \n    		\'pn\': page_num, \n    		\'kd\': keyword, \n    	}\n    	page_data_urlencode = urllib.urlencode(page_data)\n    	req = urllib2.Request(url, headers = page_headers)\n    	page = urllib2.urlopen(req, data = page_data_urlencode).read()\n    	return page\n    \n    def read_tag(html):\n    	positionId_list = []\n    	companys = json.loads(html)[\'content\'][\'positionResult\'][\'result\']\n    	for company in companys:\n    		#print company[\'positionId\']\n    		positionId_list.append(company[\'positionId\'])\n    	return positionId_list\n    	\n    def read_page_size(html):\n    	page_size = json.loads(html)[\'content\'][\'positionResult\'][\'totalCount\']\n    	if page_size > 30:\n    		return 30\n    	else:\n    		return page_size\n    	\n    if __name__ == \'__main__\':\n    	read_path = r\'D:\\tmp\\url.txt\'\n    	error_path = r\'D:\\tmp\\error.txt\'\n    	\n    	fread = open(read_path, \'r\')\n    	error_write = open(error_path, \'w\')\n    	url_list = fread.readlines()\n    	fread.close()\n    	for i in xrange(len(url_list)):\n    		print i, url_list[i]\n    		num = url_list[i].split(\'/\')[-1].split(\'.\')[0]\n    		write_path = \'D:\\\\tmp\\\\\' + num + \'.txt\'\n    		fwrite = open(write_path, \'w\')\n    		try:\n    			html = read_page(url_list[i])\n    			content = html.replace(\'\\n\', TMPFLAG)\n    			ans = re.findall(REGEXSTR, content)\n    			result = ans[0].replace(TMPFLAG, \'\\n\').replace(\'<br>\', \'\').replace(\'<p>\', \'\').replace(\'</p>\', \'\')\n    			fwrite.write(url_list[i] + \'\\n\')\n    			fwrite.write(result)\n    			fwrite.close()\n    		except Exception as ex:\n    			error_write.write(url_list[i])\n    			print ex\n    		time.sleep(5)\n    	error_write.close()\n    	\'\'\'\n    	html = read_page_post(URL, 1, \'Android\')\n    	\n    	page_size = read_page_size(html)\n    	print page_size\n    	\n    	fwrite = open(path, \'w\')\n    	for i in xrange(1, page_size):\n    		print i\n    		html = read_page_post(URL, i, \'Android\')\n    		positionId_list = read_tag(html)\n    		for positionId in positionId_list:\n    			fwrite.write(r\'http://www.lagou.com/jobs/\' + str(positionId) + \'.html\\n\')\n    		time.sleep(5)\n    	fwrite.close()\n    	\'\'\'\n\n\n\n\n\n\n\n\n',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(23,'帮人写的文件过滤-Python(重点:sys.argv用法)','23',1471421940,1479285842,'<!--markdown-->其实这个东西挺简单的, 就用了几分钟就做完了, 只是sys.argv的记录还没有加过, 就贴上来做个备注\n\n\n<!--more-->\n\n\n    # -*-coding:utf-8-*-\n    #test.py -w 1.txt -s 关键词 -o xx.txt\n    \n    import os\n    import sys\n    \n    SPLIT_TAG = \'|\'\n    DEFAULTPATH = ROOTDIR = os.getcwd()\n    OUTALL = True\n    \n    if __name__ == \'__main__\':\n    	inFile = \'\'\n    	tag = \'\'\n    	outFile = \'\'\n    	flag = False\n    	if len(sys.argv) != 7:\n    		print \'Wrong args\'\n    	else:\n    		for i in xrange(1, len(sys.argv), 2):\n    			if sys.argv[i] == \'-w\':\n    				if \'\\\\\' in sys.argv[i + 1]:\n    					inFile = sys.argv[i + 1]\n    				else:\n    					inFile = DEFAULTPATH + \'\\\\\' + sys.argv[i + 1]\n    			elif sys.argv[i] == \'-c\':\n    				tag = sys.argv[i + 1]\n    			elif sys.argv[i] == \'-v\':\n    				if \'\\\\\' in sys.argv[i + 1]:\n    					outFile = sys.argv[i + 1]\n    				else:\n    					outFile = DEFAULTPATH + \'\\\\\' + sys.argv[i + 1]\n    		fread = open(inFile, \'r\')\n    		fwrite = open(outFile, \'w\')\n    		lines = fread.readlines()\n    		for line in lines:\n    			arry = line.split(SPLIT_TAG)\n    			if tag == arry[1]:\n    				if OUTALL:\n    					fwrite.write(line)\n    				else:\n    					fwrite.write(arry[3] + \'\\n\')\n    				flag = True\n    				\n    		if not flag:\n    			fwrite.write(\'none\')\n    		fread.close()\n    		fwrite.close()',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(24,'Picture1.jpg','Picture1-jpg',1471581428,1471581428,'a:5:{s:4:\"name\";s:12:\"Picture1.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2016/08/2552271326.jpg\";s:4:\"size\";i:14450;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";}',1,1,NULL,'attachment','publish',NULL,0,'1','0','1',25),(25,'Python验证码识别Demo','25',1472821560,1479285836,'<!--markdown-->    pip install pillow\n    pip install pytesseract\n\n安装tesseract-ocr\n[https://github.com/tesseract-ocr][1]\n\n\n  [1]: https://github.com/tesseract-ocr\n\ntestteract测试代码\n\n    tesseract in.png out\n\n有些图片会提示empty page\n\n    tesseract in.png out -psm -7\n\npytesseract测试代码, 摘自别人的Blog\n    import pytesseract\n    \n    from PIL import Image\n    \n    path = r\'D:\\11.png\'\n    image = Image.open(path)\n    \n    vcode = pytesseract.image_to_string(image)\n    \n    print vcode',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(26,'针对书书网的爬虫批量下载书籍','26',1474205760,1479285825,'<!--markdown-->此爬虫只针对书书网特定的分类页, 需要点击文章的作者名进入特定页面\n[此程序支持的样例网页][1]\n\n    # -*-coding:utf-8-*-\n    import re\n    import os\n    import time\n    import urllib\n    import urllib2\n\n\n<!--more-->\n\n\n        URL = r\'http://www.shushu8.com/\'\n        PATH = r\'D:/getbook/\'\n        TMPFLAG = \'www.rootblack.com\'\n        TYPE = \'.txt\' # .epub, .txt\n        \n        def callbackfunc(blocknum, blocksize, totalsize):    //用来显示urllib.urlretrieve()函数的下载进度\n            \'\'\'回调函数\n            @blocknum: 已经下载的数据块\n            @blocksize: 数据块的大小\n            @totalsize: 远程文件的大小\n            \'\'\'\n            percent = 100.0 * blocknum * blocksize / totalsize\n            if percent > 100:\n                percent = 100\n            print blocknum * blocksize, \'/\', totalsize, \" %.2f%%\\r\" % percent,\n            \n        def get_html(url):\n            while(True):\n                try:\n                    content = urllib2.urlopen(url, timeout = 10).read()\n                    #content = html.replace(\'\\n\', TMPFLAG)\n                    return content\n                except Exception as ex:\n                    print ex\n            \n        def get_re_ans(content, regexstr):\n            ans = re.findall(regexstr, content)\n            return ans\n            \n        def write_str_to_file(file_name, str):\n            htmlw = open(PATH + file_name, \'w\')\n            htmlw.write(str)\n            htmlw.close()\n            \n        def write_list_to_file(file_name, str_list):\n            htmlw = open(PATH + file_name, \'w\')\n            for single_ans in str_list:\n                htmlw.write(single_ans[0] + \' \' + single_ans[1] + \'\\n\')\n            htmlw.close()\n            \n        if __name__ == \'__main__\':\n            \'\'\'get root page html\'\'\'\n            root_path = \'/author/10280.html\'\n            content_root = get_html(URL + root_path)\n            #write_str_to_file(\'/root.html\', content)\n            \n            \'\'\'get book main page url\'\'\'\n            regexstr_root = r\'<h2><a href=\"(.*?)\">(.*?)</a></h2>\'\n            book_main_url_list = get_re_ans(content_root, regexstr_root)\n            #write_list_to_file(\'/book_url.html\', ans_list)\n            count = 1\n            for book_main_url in book_main_url_list:\n                \'\'\'set download location\'\'\'\n                print \'downloading...\', count, \' / \', len(book_main_url_list), \n                file_path = PATH + book_main_url[1] + TYPE\n                if os.path.exists(file_path):\n                    count += 1\n                    print book_main_url[1], \'is exists\'\n                    continue\n                \n                \'\'\'get book download page url\'\'\'\n                book_main_url = URL + book_main_url[0]\n                content_main = get_html(book_main_url)\n                regexstr_down_page = r\'<a href=\"(.*?)\" class=\"txtdown\" title=\"(.*?)\">\'\n                download_page_list = get_re_ans(content_main, regexstr_down_page)\n                #print download_page_list\n                \n                \'\'\'get book download url\'\'\'\n                download_page_url = URL + download_page_list[0][0]\n                content_download = get_html(download_page_url)\n                #write_str_to_file(\'download.txt\', content_download)\n                regexstr_download_url = r\'<a class=\"downButton\" href=\\\'(.*?)\\\' title\'\n                if TYPE == \'.txt\':\n                    regexstr_download_url = r\'<a name=\"txt\" class=\"downButton\" href=\\\'(.*?)\\\' title\'\n                    \n                download_url_list = get_re_ans(content_download, regexstr_download_url)\n                #print \'length:\', len(download_url_list)\n                for download_url in download_url_list:\n                    #count = count + 1\n                    if TYPE in download_url:\n                        count += 1\n                        print download_url\n                        #urllib.urlretrieve(download_url, download_url.split(\'//\')[-1])\n                        #file_path = PATH + download_url.split(\'/\')[-1].split(\'_\')[0] + \'.txt\'\n                        #print \'downing... \', #, \'\\n\', download_url#, \'\\n\', download_url.split(\'/\')[-1]\n                        #urllib.urlretrieve(download_url, file_path, callbackfunc) //此函数可显示下载进度\n    //但是此函数会边下边存, 如果中途中断会导致文件不完整, 故事用下面的方法来下载\n                        html = get_html(download_url)\n                        f = open(file_path, \'wb\')\n                        f.write(html)\n                        f.close()\n                        time.sleep(1)\n\n\n  [1]: http://www.shushu8.com/author/5842.html',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(27,'读取eml文件','27',1478503320,1479285818,'<!--markdown-->    #-*- encoding: utf-8 -*-\n    \n    import email\n    \n\n\n<!--more-->\n\n\n    # 循环信件中的每一个mime的数据块\n    def ReadMail(file_name):\n        fp = open(file_name, \"r\")\n        msg = email.message_from_file(fp)\n    \n        for par in msg.walk():\n            if not par.is_multipart(): # 这里要判断是否是multipart，是的话，\n                                       #里面的数据是一个message 列表\n                name = par.get_param(\"name\") #如果是附件，这里就会取出附件的文件名\n                if name:\n                    #有附件\n                    # 下面的三行代码只是为了解码象=?gbk?Q?=CF=E0=C6=AC.rar?=这样的文件名\n                    h = email.Header.Header(name)\n                    dh = email.Header.decode_header(h)\n                    fname = dh[0][0]\n                    print \'附件名:\', fname\n                    data = par.get_payload(decode=True) #　解码出附件数据，然后存储到文件中\n         \n                    try:\n                        f = open(fname, \'wb\') #注意一定要用wb来打开文件，因为附件一般都是二进制文件\n                    except:\n                        print \'附件名有非法字符，自动换一个\'\n                        f = open(\'aaaa\', \'wb\')\n                    f.write(data)\n                    f.close()\n                else:\n                    #不是附件，是文本内容\n                    return par.get_payload(decode=True) # 解码出文本内容，直接输出来就可以了。\n         \n                return \'+\'*60 # 用来区别各个部分的输出',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(28,'php提交表单并保存为txt下载','28',1478531220,1479285812,'<!--markdown-->commit.html\n\n    <body>\n    <form action=\"commit.php\" method=\"post\">\n    <input type=\"text\" name=\"txt\"/><br>\n    <input type=\"submit\" name=\"commit\" value=\"commit\" /><br>\n    </form>\n    </body>\n\n\n<!--more-->\n\ncommit.php\n\n    <?php\n    $commit = $_POST[\'commit\'];\n    \n    if ($commit) {\n        commit();\n    }\n    ?>\n    \n    <?php\n    function commit() {\n        #echo $_POST[\'txt\'];\n        file_put_contents ( \'test.txt\' , $_POST[\'txt\'] );\n        $filename=\'test.txt\'; //文件名\n        $date=date(\"Ymd-H:i:m\");\n        Header( \"Content-type:  application/octet-stream \"); \n        Header( \"Accept-Ranges:  bytes \"); \n        Header( \"Accept-Length: \" .filesize($filename));\n        header( \"Content-Disposition:  attachment;  filename= {$date}.txt\"); \n        //echo file_get_contents($filename);\n        readfile($filename); \n    }\n    ?>\n\n',0,1,NULL,'post','publish',NULL,1,'1','0','1',0),(29,'k-邻近算法实现','29',1478831880,1479285803,'<!--markdown-->其实我就是抄的书上的源代码, 注释了一些numpy里面以前没用过的函数的功能然后传上来而已, 不服你打我啊\n\n\n<!--more-->\n\n    # -*-coding:utf-8-*-\n    \n    import os\n    import time\n    import operator\n    from numpy import *\n    \n    TRAINDIR = os.getcwd() + \'\\\\trainingDigits\\\\\'\n    TESTDIR = os.getcwd() + \'\\\\testDigits\\\\\'\n    \n    def createDataSet():\n        group = array([[1.0, 1.1], [1.0, 1.0], [0, 0], [0, 0.1]])\n        labels = [\'A\', \'A\', \'B\', \'B\']\n        return group, labels\n    \n    def img2vector(filename):\n        returnVect = zeros(1024)    #创建一个1024长度的list因为每个数字文件都是32*32的矩阵\n        fr = open(filename, \'r\')\n        for i in range(32):\n            lineStr = fr.readline()\n            for j in range(32):\n                returnVect[32 * i + j] = int(lineStr[j])\n        \n        return returnVect\n    \n    def classify0(inX, dataSet, labels, k):\n        dataSetSize = dataSet.shape[0]  #等同于len(dataSet)区别为当shape(1)时计算的是len(dataSet[0])\n        diffMat = tile(inX, (dataSetSize, 1)) - dataSet     #复制inX为dataSetSize列, 1为每列出现一次, 2便复制两次\n        sqDiffMat = diffMat ** 2\n        sqDistances = sqDiffMat.sum(axis = 1)   #axis = 0为列求和, axis = 1为行求和\n        sortedDisIndecies = sqDistances.argsort()   #返回值为从小到大排列后的下角标, 数组为numpy.zeros(n)所创建\n        classCount = {}\n        for i in range(k):\n            voteIlabel = labels[sortedDisIndecies[i]]\n            classCount[voteIlabel] = classCount.get(voteIlabel, 0) + 1\n        \n        sortedClassCount = sorted(classCount.iteritems(), key = operator.itemgetter(1), reverse = True) #reverse = True为从大到小排序\n        \n        return sortedClassCount[0][0]\n    \n    def handwriteClassTest():\n        t1 = time.time()\n        hwLabels = []\n        trainingFileList = os.listdir(TRAINDIR)\n        m = len(trainingFileList)\n        trainingMat = zeros((m, 1024))\n        for i in range(m):\n            fileNameStr = trainingFileList[i]\n            fileStr = fileNameStr.split(\'.\')[0]\n            classNumStr = int(fileStr.split(\'_\')[0])\n            hwLabels.append(classNumStr)\n            trainingMat[i, :] = img2vector(TRAINDIR + fileNameStr)\n        testFileList = os.listdir(TESTDIR)\n        errorCount = 0\n        mTest = len(testFileList)\n        \n        for i in range(mTest):\n            fileNameStr = testFileList[i]\n            fileStr = fileNameStr.split(\'.\')[0]\n            classNumStr = int(fileStr.split(\'_\')[0])\n            vectorUnderTest = img2vector(TESTDIR + fileNameStr)\n            classifierResult = classify0(vectorUnderTest, trainingMat, hwLabels, 3)\n            #print \"the classifier came back with: %d, the real answer is: %d\" % (classifierResult, classNumStr)\n            if(classifierResult != classNumStr):\n                errorCount += 1;\n        \n        t2 = time.time()\n        print \'time\', t2 - t1\n        print \"the total number of errors is\", errorCount\n        print \"the total error rate is:\", 1.0 * errorCount / mTest\n    \n    if __name__ == \'__main__\':\n        handwriteClassTest()\n        #group, labels = createDataSet()\n        #print classify0([0, 0], group, labels, 3)\n\n所使用的数字文件:[下载地址][1]\n\n\n  [1]: http://www.rootblack.com/Downloads/digits.7z',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(30,'php对图像操作的部分函数','30',1479285600,1479285797,'<!--markdown-->Just a backup...\n\n\n<!--more-->\n\n\n    <?php\n        class changeImage {\n            public function pic2txt($file_dir, $file_name, $num = 0) {\n                #$this->change2gray($file_dir. \'/\'. $file_name, $file_dir. \'/tmp_\'. $file_name);\n                #$imgs_ary = $this->splitImage($file_dir. \'/tmp_\'. $file_name);\n                $out_path = $file_dir.\'/\';\n                #echo (file_exists($file_dir. \'\\\\\'. $file_name) ? $file_dir. \'\\\\\'. $file_name. \'file exists\' : $file_dir. \'\\\\\'. $file_name. \'file not exists\'). \'<br>\';\n                #$l = scandir($file_dir. \'\\\\\');\n                #echo \'l<br>\';\n                #print_r($l);\n                #echo \'l<br>\';\n                \n                $imgs_ary = $this->splitImage($file_dir. \'/\'. $file_name, $out_path, $num);\n                $length = count($imgs_ary);\n                #echo \'length\'. $length;\n                $txt_ary = array();\n                for($i = 0; $i < $length; $i++) {\n                    $this->resizeImage(32, 32, $imgs_ary[$i], $imgs_ary[$i]);\n                    $txt_path = $out_path.\'/\'. $file_name. \'_ans_\'. $i;\n                    #echo \'txt_path\'. $txt_path;\n                    $this->img2txt($imgs_ary[$i], $txt_path);\n                    $txt_ary[$i] = $txt_path;\n                }\n                return $txt_ary;\n            }\n            \n            private function getAvg($file_path, $no_zero = false) {\n                $im = ImageCreateFromPng($file_path); \n    \n                $imgw = imagesx($im);\n                $imgh = imagesy($im);\n                \n                $sum = 0;\n                $zero_count = 0;\n                for ($i=0; $i<$imgw; $i++)\n                {\n                    for ($j=0; $j<$imgh; $j++)\n                    {\n    \n                        // get the rgb value for current pixel\n    \n                        $rgb = ImageColorAt($im, $i, $j); \n    \n                        $rr = ($rgb >> 16) & 0xFF;\n                        $gg = ($rgb >> 8) & 0xFF;\n                        $bb = $rgb & 0xFF;\n                        $g = $rr * 0.299 + $gg * 0.587 + $bb * 0.114;\n                        $sum += $g;\n                        if($no_zero) {\n                            $zero_count += ($rr == 0 and $gg == 0 and $bb == 0) ? 1 : 0;\n                        }\n                    }\n                }\n                $avg = $sum / ($imgh * $imgw - $zero_count);\n                return $avg;\n            }\n            \n            private function splitImage($file_path, $out_path = \'uploads/\', $out_name = \'\') {\n                $im = ImageCreateFromPng($file_path); \n    \n                $imgw = imagesx($im);\n                $imgh = imagesy($im);\n                \n                \n                $avg = $this->getAvg($file_path);\n                #echo \'avg\'. $avg. \'<br>\';\n                $find_true = true;\n                $start_point = 0;\n                $end_point = 0;\n                $count = 0;\n                $return_ary = array();\n                for ($i=2; $i<$imgw - 1; $i++)\n                {\n                    \n                    $ary = array();\n                    for ($j=0; $j<$imgh; $j++)\n                    {\n                        $rgb = ImageColorAt($im, $i, $j);\n                        // get the rgb value for current pixel\n                        $rr = ($rgb >> 16) & 0xFF;\n                        $gg = ($rgb >> 8) & 0xFF;\n                        $bb = $rgb & 0xFF;\n                        $g = $g = $rr * 0.299 + $gg * 0.587 + $bb * 0.114;\n                        #echo $g. \' \';//. $avg. \'<br>\';\n                        if($g < $avg and $i != 0 and $i != $imgw - 1 and $j != 0 and $j != $imgh - 1) {\n                            $g = 0;\n                            #echo \'0\';\n                        }\n                        else {\n                            $g = 255;\n                            #echo \'1\';\n                        }\n                        $ary[$j] = $g;\n                        //echo $g.\' \';\n                    }\n                    #echo \'<br>\';\n                    $ans = $this->calLine($ary);\n                    if ($find_true and $ans) {\n                        $find_true = false;\n                        $start_point = $i;\n                        #echo \'start point\';\n                    }\n                    elseif (!$find_true and !$ans) {\n                        $find_true = true;\n                        $end_point = $i;\n                        if($end_point - $start_point > 2) {\n                            $out_file = $out_path .$out_name. \'_\'. $count. \".png\";\n                            $this->cutImage($start_point, 0, $end_point - $start_point, $imgh, $file_path, $out_file);\n                            $return_ary[$count++] = $out_file;\n                        }\n                        #echo \'end point\';\n                    }\n                }\n                return $return_ary;\n            }\n            \n            private function getBigMore($im, $imgw, $avg) {\n                $count = 0;\n                $imgh = 32;\n                $zero_count = 0;\n                for ($i=0; $i<$imgh; $i++) {\n                    for ($j=0; $j<$imgw; $j++) {\n                        $rgb = ImageColorAt($im, $j, $i); \n                        // extract each value for r, g, b\n                        $rr = ($rgb >> 16) & 0xFF;\n                        $gg = ($rgb >> 8) & 0xFF;\n                        $bb = $rgb & 0xFF;\n                        $g = $rr * 0.299 + $gg * 0.587 + $bb * 0.114;\n                        #echo $g. \' \';\n                        $zero_count += ($g == 0 ? 1 : 0);\n                        $count += ($g > $avg ? 1 : 0);\n                    }\n                }\n                #echo $count. \' \'. ($imgw * $imgh). \'<br>\';\n                return ($count > ($imgw * $imgh - $zero_count) / 2 ? true : false);\n            }\n    \n            private function img2txt($file_path, $to_path) {\n                $im = ImageCreateFromPng($file_path); \n    \n                $imgw = imagesx($im);\n                $imgh = imagesy($im);\n                $avg = $this->getAvg($file_path, true);\n                $big_more = $this->getBigMore($im, $imgw, $avg);\n                $fw = fopen($to_path, \'w\');\n                $find_true = true;\n                $start_point = 0;\n                $end_point = 0;\n                $return_ary = array();\n                #echo $imgh. \' \'. $imgw. \' \'. $avg. \'<br>\';\n                for ($i=0; $i<$imgh; $i++) {\n                    $count = 0;\n                    $ary = array();\n                    for ($j=0; $j<$imgw; $j++) {\n                        $rgb = ImageColorAt($im, $j, $i); \n                        // extract each value for r, g, b\n                        $rr = ($rgb >> 16) & 0xFF;\n                        $gg = ($rgb >> 8) & 0xFF;\n                        $bb = $rgb & 0xFF;\n                        $g = $rr * 0.299 + $gg * 0.587 + $bb * 0.114;\n                        if(false) {\n                            echo $g. \' \';\n                        }\n                        else {\n                            if($g == 0) {\n                                #echo \'0\';\n                                fwrite($fw, 0);\n                            }\n                            else {\n                                if($big_more) {\n                                    #echo $g > $avg ? \'0\' : \'1\';\n                                    fwrite($fw, $g > $avg ? \'0\' : \'1\');\n                                }\n                                else {\n                                    #echo $g > $avg ? \'1\' : \'0\';\n                                    fwrite($fw, $g > $avg ? \'1\' : \'0\');\n                                }\n                            }\n                        }\n                    }\n                    #echo \'<br>\';\n                    fwrite($fw, \"\\r\\n\");\n                }\n                fclose($fw);\n            }\n            \n            private function calLine($arry) {\n                #print_r($arry);\n                $length = count($arry);\n                for($i = 3; $i < $length - 3; $i++) {\n                    if($arry[$i] == 255 and $arry[$i + 1] == 255) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            \n            private function cutImage($x, $y, $width, $height, $from_path, $to_path) {\n                #echo \'<br>\'. $x. \' \'. $y. \' \'. $width. \' \'. $height. \' \'. $from_path. \' \'. $to_path. \'<br>\';\n                $im = imagecreatefrompng($from_path);\n                //$size = min(imagesx($im), imagesy($im));\n                //$tmp = (\'x\' => $x, \'y\' => $y, \'width\' => $width, \'height\' => $height);\n                $tmp[\'x\'] = $x;\n                $tmp[\'y\'] = $y;\n                $tmp[\'width\'] = $width;\n                $tmp[\'height\'] = $height;\n                $im2 = imagecrop($im, $tmp);\n                if ($im2 !== FALSE) {\n                    imagepng($im2, $to_path);\n                    echo $to_path.\'<br>\';\n                }\n            }\n            public function resizeImage($width, $height, $from_path, $to_path) {\n                $size = getimagesize($from_path);\n                \n                $src = imagecreatefromstring(file_get_contents($from_path));\n                $dst = imagecreatetruecolor($width,$height);\n                imagecopyresampled($dst,$src,0,0,0,0,$width,$height,$size[0],$size[1]);\n                imagedestroy($src);\n                imagepng($dst,$to_path); // adjust format as needed\n                /*echo \'dst<br>\';\n                for($i = 0; $i < 32; $i++) {\n                    for($j = 0; $j < 32; $j++) {\n                        $rgb = ImageColorAt($dst, $j, $i); \n                        // extract each value for r, g, b\n                        $rr = ($rgb >> 16) & 0xFF;\n                        $gg = ($rgb >> 8) & 0xFF;\n                        $bb = $rgb & 0xFF;\n                        $g = $rr * 0.299 + $gg * 0.587 + $bb * 0.114;\n                        echo $g. \' \';\n                    }\n                    echo \'<br>\';\n                }*/\n                imagedestroy($dst);\n            }\n        }\n    ?>',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(31,'k-邻近算法PHP实现','31',1479285720,1479285790,'<!--markdown-->跟Python的那个效果一样, 只不过是php写的而已, 也懒的拆分里面的函数了, 就直接全贴进去好了\n\n\n<!--more-->\n\n\n    <?php\n        class KNN{\n            public function show($ary) {\n                for($j = 0; $j < count($ary); $j++) {\n                    echo $ary[$j].\' \';\n                }\n                echo \'<br>\';\n            }\n            \n            public function show2($ary) {\n                for($i = 0; $i < count($ary); $i++) {\n                    for($j = 0; $j < count($ary[0]); $j++) {\n                        echo $ary[$i][$j].\' \';\n                    }\n                    echo \'<br>\';\n                }\n            }\n            public function createDataSet() {\n                $group = array(\n                    array(1.0, 1.1), \n                    array(1.0, 1.0), \n                    array(0, 0), \n                    array(0, 0.1),\n                );\n                $labels = array(\"A\", \"A\", \"B\", \"B\");\n                return array(\'group\'=> $group, \'labels\'=> $labels);\n            }\n        \n            public function img2vector($filename) {\n                $returnVect = array();\n                $fr = fopen($filename, \'r\');\n                $result = fread($fr, 1024 + 64);\n                $s = \'\';\n                for($i = 0; $i < 32; $i++) {\n                    for($j = 0; $j < 32; $j++) {\n                        $s = $s. $result[34 * $i + $j];\n                    }\n                }\n                fclose($fr);\n                return $s;\n            }\n            \n            public function classify0($inX, $dataSet, $labels, $k) {\n                $length = strlen($inX);\n                $dataSetSize = count($dataSet);\n                $diffMat = array(array());\n                for($i = 0; $i < $dataSetSize; $i++) {\n                    $diffMat[$i] = $inX;\n                }\n                $sqDistances = array();\n                for($i = 0; $i < $dataSetSize; $i++) {\n                    $add_ans = 0;\n                    for($j = 0; $j < $length; $j++) {\n                        $sub_ans = ((int)(substr($diffMat[$i], $j, 1)) - (int)($dataSet[$i][$j]));\n                        $mul_ans = $sub_ans * $sub_ans;\n                        $add_ans += $mul_ans;\n                    }\n                    $sqDistances[$i] = $add_ans;\n                }\n                asort($sqDistances);\n                //print_r($sqDistances);\n                $classCount = array();\n                \n                $count = 0;\n                foreach($sqDistances as $key=> $value) {\n                    $count++;\n                    if($count > $k) {\n                        break;\n                    }\n                    $voteIlabel = $labels[$key];\n                    #echo $voteIlabel.\'<br>\';\n                    $classCount[$voteIlabel] = 0;\n                }\n                $count = 0;\n                //echo \'<br>keys:<br>\';\n                //print_r($labels);\n                foreach($sqDistances as $key=> $value) {\n                    $count++;\n                    if($count > $k) {\n                        break;\n                    }\n                    $voteIlabel = $labels[$key];\n                    if($voteIlabel == \'\') {\n                        //echo \'<br>\'. $key. \'<br>\';\n                    }\n                    $classCount[$voteIlabel] = $classCount[$voteIlabel] + 1;\n                }\n                arsort($classCount);\n                print_r($classCount);\n                $ans = key($classCount);\n                return $ans;\n            }\n            \n            public function handwriteClassTest($root_path, $txt_name) {\n                $hwLabels = array();\n                //$trainingFileList = scandir(\'/data/home/bxu2359050697/htdocs/K-NN/trainingDigits/\');\n                //echo $root_path, $txt_name;\n                $train_dir = $root_path. \'K-NN/trainingDigits/\';\n                //echo $train_dir;\n                $trainingDirList = scandir($train_dir);\n                #print_r($trainingDirList);\n                $dir_length = count($trainingDirList);\n                $trainingMat = array(array(1024));\n                $train_count = 0;\n                #echo \'length:\'. $dir_length. \'<br>\';\n                for($i = 0; $i < $dir_length; $i++) {\n                    $fileNameStr = $trainingDirList[$i];\n                    if($fileNameStr == \'.\' || $fileNameStr == \'..\') {\n                        continue;\n                    }\n                    #echo \'scan:\'. $train_dir. $trainingDirList[$i]. \'/<br>\';\n                    $trainingFileList = scandir($train_dir. $trainingDirList[$i]. \'/\');\n                    #print_r($trainingFileList);\n                    \n                    $m = count($trainingFileList);\n                    #echo \'length_file:\'. $m. \'<br>\';\n                    $error_count = 0;\n                    for($j = 0; $j < $m; $j++) {\n                        $real_num = $i - $error_count;\n                        //echo $error_count.\' \'.$real_num;\n                        $fileNameStr = $trainingFileList[$j];\n                        if($fileNameStr == \'.\' || $fileNameStr == \'..\') {\n                            $error_count += 1;\n                            continue;\n                        }\n                        $classNumStr = $trainingDirList[$i];//(int)(substr($fileNameStr, 0, 1));\n                        $hwLabels[$train_count] = $classNumStr;\n                        #print_r($hwLabels);\n                        //$trainingMat[$i] = $this->img2vector(\'/data/home/bxu2359050697/htdocs/K-NN/trainingDigits/\'.$fileNameStr);\n                        $trainingMat[$train_count] = $this->img2vector($train_dir. $trainingDirList[$i]. \'/\'. $fileNameStr);\n                        $train_count++;\n                    }\n                }\n                $vectorUnderTest = $this->img2vector($txt_name);\n                #echo $root_path. $txt_name;\n                $classifierResult = $this->classify0($vectorUnderTest, $trainingMat, $hwLabels, 5);\n                return $classifierResult;\n            }\n            \n        }\n    ?>',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(32,'python 生成md5','32',1479468180,1479468858,'<!--markdown-->    #-*- encoding: utf-8 -*-\n    \n    import hashlib\n    \n    def md5(str):\n        m = hashlib.md5()\n        m.update(str)\n        return m.hexdigest()',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(33,'Unnamed QQ Screenshot20161121101138.png','Unnamed-QQ-Screenshot20161121101138-png',1479694311,1479694311,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20161121101138.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/11/1899570189.png\";s:4:\"size\";i:24285;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',1,1,NULL,'attachment','publish',NULL,0,'1','0','1',35),(34,'Unnamed QQ Screenshot20161121101623.png','Unnamed-QQ-Screenshot20161121101623-png',1479694590,1479694590,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20161121101623.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/11/2317024387.png\";s:4:\"size\";i:25919;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',2,1,NULL,'attachment','publish',NULL,0,'1','0','1',35),(35,'SAS University Edition安装','35',1479694800,1479695032,'<!--markdown-->其实安装过程官方的pdf已经说的很清楚了, 我只是记录一下安装过程可能会出现的问题:\n\n\n<!--more-->\n\n\n我用的虚拟机是vBox\nQ1. 启动程序的时候vBox提示: vt-x is not available (verr_vmx_no_vmx).\n解决办法: 网上都说要在Bios开启你的vt-x选项, 这里没错, 但是网上没说你需要同时关闭微软的Hyper-V选项, 该选项所在位置\n![Unnamed QQ Screenshot20161121101138.png][1]\n\n\n可以直接在开始菜单搜索Windows Features就可以找到, 这样就解决了vBox虚拟化的问题. 可以在新建里面查看一下, 如果可以创建64-bit的系统的话, 就证明成功了. \n\nQ2. 正常启动虚拟机后提示: this kernel requires an x86-64 cpu,but only detected an i686 cpu  \n解决办法: 在虚拟机的设置里面\n![Unnamed QQ Screenshot20161121101623.png][2]\n\n把系统类型修改为Other, 版本修改为Other/Unknown(64-bit)\n\nQ3. 正常启动虚拟机, 虚拟机也正常运行, 但是在本地浏览器打开指定网页提示无法访问\n解决方案: 重新看一次文档, 一步一步重新设置一次, 肯定是漏掉了哪一步的设置, 我当时是忘记设置共享文件夹了\n\n分享一下SAS University Edition的下载链接:\n链接：http://pan.baidu.com/s/1o8vtWxW 密码：pvla\n\nSAS University Editiong官方安装文档: [链接][3]\n\n\n  [1]: http://www.rootblack.com/usr/uploads/2016/11/1899570189.png\n  [2]: http://www.rootblack.com/usr/uploads/2016/11/2317024387.png\n  [3]: http://www.rootblack.com/Downloads/SASUniversityEditionQuickStartVirtualBox.pdf',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(36,'Unnamed QQ Screenshot20161123214716.png','Unnamed-QQ-Screenshot20161123214716-png',1479908852,1479908852,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20161123214716.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/11/3089941929.png\";s:4:\"size\";i:26803;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',1,1,NULL,'attachment','publish',NULL,0,'1','0','1',40),(37,'Unnamed QQ Screenshot20161123214947.png','Unnamed-QQ-Screenshot20161123214947-png',1479908995,1479908995,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20161123214947.png\";s:4:\"path\";s:34:\"/usr/uploads/2016/11/423697700.png\";s:4:\"size\";i:40049;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',2,1,NULL,'attachment','publish',NULL,0,'1','0','1',40),(38,'Unnamed QQ Screenshot20161123215041.png','Unnamed-QQ-Screenshot20161123215041-png',1479909069,1479909069,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20161123215041.png\";s:4:\"path\";s:34:\"/usr/uploads/2016/11/784539420.png\";s:4:\"size\";i:31152;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',3,1,NULL,'attachment','publish',NULL,0,'1','0','1',40),(39,'Unnamed QQ Screenshot20161123215103.png','Unnamed-QQ-Screenshot20161123215103-png',1479909075,1479909075,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20161123215103.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/11/4150491370.png\";s:4:\"size\";i:24458;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',4,1,NULL,'attachment','publish',NULL,0,'1','0','1',40),(40,'Notepad++配置Java/Python/C++运行环境','40',1479909060,1479966991,'<!--markdown-->我只说一下C++的配置, 因为Java和Python的环境变量大家一般都安装好之后就配置好了, 在Notepad++里面直接使用我设置好的快捷键就好了\n\n\n<!--more-->\n\n方法1: \n需要下载的文件: \n1. 截至到写文章时, 最新的Notepad++: [地址][1]\n2. [Notepad++配置文件][2]\n3. [MinGW][3] 密码: 5n4u\n\n操作步骤\n1. 找到Notepad++的配置文件所在文件夹: c:/Users/\"user_name\"/AppData/Roaming/Notepad++/\n如图: ![Unnamed QQ Screenshot20161123214716.png][4]\n\n2. 打开Notepad++, 然后找到Run - Modify Shortcut/Delete Command并打开查看一下内容\n![QQ Photo20161123215408.jpg][5]\n如果是这个样子说明配置文件替换成功\n\n3. 将MinGW解压并放到你平时存放软件的目录中, 例如: 我的MingW放在C:/Program Files/目录下\n![Unnamed QQ Screenshot20161123214947.png][6]\n然后将里面的bin文件夹放到环境变量中的Path中\n![Unnamed QQ Screenshot20161123215041.png][7]\n![Unnamed QQ Screenshot20161123215103.png][8]\n\n然后自己先在cmd里面输入g++命令尝试一下能否成功使用\n![Unnamed QQ Screenshot20161123215509.png][9]\n如果如上图所示就是环境变量配置成功\n\n最后, 你就可以随便写一个.c/.cpp的文件然后使用F10来编译文件, Ctrl + F10来运行了\n\n方法2: \n下载NPPExec: [地址][10]\n下载后解压, 找到\'NppExec.dll\'文件, 然后复制到你的NP++安装目录中的Plugin文件夹内, 重启NP++即可\n\n按F6添加命令\nC++:\n\n    NPP_SAVE\n    g++ -g -Wall $(FULL_CURRENT_PATH) -o $(NAME_PART).exe\n    $(NAME_PART).exe\n\nJava: \n\n    NPP_SAVE\n    cd \"$(CURRENT_DIRECTORY)\"\n    javac.exe -encoding UTF-8 \"$(FILE_NAME)\"\n    java.exe \"$(NAME_PART)\"\n\nPython:\n\n    NPP_SAVE\n    python  \"$(FULL_CURRENT_PATH)\"\n\nNPPExec的好处是自带cmd命令框, 直接在NP++里面就可以使用\n\n    FULL_CURRENT_PATH     文件路径名称       xxx:\\xx.java \n    CURRENT_DIRECTORY     文件目录           xxx:\\ \n    FILE_NAME             文件全名称         xx.java \n    NAME_PART             文件名称           xx \n    EXT_PART              文件扩展名         java \n\n  [1]: https://notepad-plus-plus.org/repository/7.x/7.2.1/npp.7.2.1.Installer.exe\n  [2]: http://www.rootblack.com/Downloads/shortcuts.7z\n  [3]: http://pan.baidu.com/s/1jINm4Gu\n  [4]: http://www.rootblack.com/usr/uploads/2016/11/3089941929.png\n  [5]: http://www.rootblack.com/usr/uploads/2016/11/4096589950.jpg\n  [6]: http://www.rootblack.com/usr/uploads/2016/11/423697700.png\n  [7]: http://www.rootblack.com/usr/uploads/2016/11/3923043187.png\n  [8]: http://www.rootblack.com/usr/uploads/2016/11/1873447188.png\n  [9]: http://www.rootblack.com/usr/uploads/2016/11/2175011737.png\n  [10]: https://sourceforge.net/projects/npp-plugins/files/\n',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(41,'Unnamed QQ Screenshot20161123215041.png','Unnamed-QQ-Screenshot20161123215041-png-1',1479909161,1479909161,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20161123215041.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/11/3923043187.png\";s:4:\"size\";i:31152;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',5,1,NULL,'attachment','publish',NULL,0,'1','0','1',40),(42,'Unnamed QQ Screenshot20161123215103.png','Unnamed-QQ-Screenshot20161123215103-png-1',1479909168,1479909168,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20161123215103.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/11/1873447188.png\";s:4:\"size\";i:24458;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',6,1,NULL,'attachment','publish',NULL,0,'1','0','1',40),(43,'QQ Photo20161123215408.jpg','QQ-Photo20161123215408-jpg',1479909256,1479909256,'a:5:{s:4:\"name\";s:26:\"QQ Photo20161123215408.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2016/11/4096589950.jpg\";s:4:\"size\";i:62653;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";}',7,1,NULL,'attachment','publish',NULL,0,'1','0','1',40),(44,'Unnamed QQ Screenshot20161123215509.png','Unnamed-QQ-Screenshot20161123215509-png',1479909314,1479909314,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20161123215509.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/11/2175011737.png\";s:4:\"size\";i:1777;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',8,1,NULL,'attachment','publish',NULL,0,'1','0','1',40),(47,'QQ Photo20161205221426.jpg','QQ-Photo20161205221426-jpg',1480947276,1480947276,'a:5:{s:4:\"name\";s:26:\"QQ Photo20161205221426.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2016/12/2867338316.jpg\";s:4:\"size\";i:345912;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";}',1,1,NULL,'attachment','publish',NULL,0,'1','0','1',48),(48,'Visual Studio 2013/2015设置背景图片插件','48',1480947240,1481131125,'<!--markdown-->效果图: \n![QQ Photo20161208011732.png][1]\n\n\n<!--more-->\n\n\n[插件下载链接(官方地址)][3]\n[插件下载链接(我的Blog)][4]\n\n\n配置插件显示图片方法: \n    Tools -> Options -> ClaudiaIDE\n显示图片所在文件夹默认是在:\n    C:\\Users\\{user_name}\\AppData\\Local\\Microsoft\\VisualStudio\\14.0\\Extensions\\ffxfu4je.dry\\Images\n\n\n  [1]: http://www.rootblack.com/usr/uploads/2016/12/3597851440.png\n  [2]: http://www.rootblack.com/usr/uploads/2016/12/2867338316.jpg\n  [3]: https://marketplace.visualstudio.com/items?itemName=kbuchi.ClaudiaIDE\n  [4]: http://www.rootblack.com/Downloads/ClaudiaIDE.zip',0,1,NULL,'post','publish',NULL,1,'1','0','1',0),(50,'QQ Photo20161208011732.png','QQ-Photo20161208011732-png',1481131081,1481131081,'a:5:{s:4:\"name\";s:26:\"QQ Photo20161208011732.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/12/3597851440.png\";s:4:\"size\";i:96972;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',2,1,NULL,'attachment','publish',NULL,0,'1','0','1',48),(53,'网上看到的徒手干掉BMW病毒的方法, 转载一下','53',1481252842,1481252842,'<!--markdown-->BMW病毒 该病毒为BIOS芯片与硬盘引导区混合型病毒 \n\n\n<!--more-->\n\n\n执行过程简述：病毒执行后首相感染BIOS芯片在感染硬盘MBR引导区在感染系统文件释放能阻止磁盘操作的my.sys驱动让后破坏系统数据下盗号木马等... 以上是该病毒执行过程简述现在我们要说怎么样将BMW病毒彻底杀掉它，在我们说杀掉他的办法之前，我们先说一下为什么中了BMW病毒后格式化硬盘或者是换硬盘都不管用，因为即使你修复了硬盘或换了硬盘都没有清除BIOS中的BMW病毒主体,当你再次开机时BIOS在POST自检时就会加载BMW病毒主体,BMW病毒主体代码执行检查硬盘主引导区 (MBR)这时如果硬盘已修复或更换硬盘那么BMW病毒主体将检测不到BMW病毒硬盘引导的病毒代码,这时BIOS BMW病毒主体将向硬盘重新写入BMW 硬盘引导病毒代码,好了我找到了为什么换硬盘都无法清除BMW病毒的原因了,现在我们就要对BMW病毒发起最后的总攻了。注意以下方法需要具备专业知识的电脑人士，普通玩家建议不要轻易尝试！！！！！！！自古以来都是魔高一尺，道高一丈 这是千古不变的，实事也证明了这句话是千古之经典、、 其实说了这么多BMW病毒多厉害多怎么怎么的，都是浮云 要干掉BMW病毒 非常容易的 \n只要2招即可；第一招 ：凌波微步. 再次说明：非专业人士切勿轻易尝试！！！！需要用到的工具，唉 也没啥当然是启动设备（光驱或量产后的U盘，并在BIOS中设置启动项）这里我介绍光盘操作(光盘操作和U盘操作差不多无非是量产之前先将ISO镜像做好在量产,切记量产时将U盘的模式改为CDROM否则在启动时会将系统直接引导进入winEP,如果进入WinEP那么病毒就会驻留在内存中在修复硬盘是就不灵了,呵呵 切记,切记..)。首先开机用GHOST安装光盘，启动后停留在安装菜单界面或直接进入硬盘维护程序（ghost安装盘里一般都有很普通）,然后注意啦 这一招为什么叫凌波微步 顾名思义 就是要,快, 快,在操作时一定要快,将主板上的BIOS芯片快速取下,(BIOS芯片主要是在开机POST自检时加载CMOS芯片内的数据自检后将数据存入至内存后一般就不再使用该芯片了)所以我们可以直接芯片拔出,然后我们格式化硬盘,普通格式化就行,然后要注意了,这一步最重要更新MBR主引导区,更新操作完成后，迅速拔掉电源插头。因为病毒存储在硬盘主引导区中，这时的硬盘，因修复了硬盘MBR主引导区，所以病毒代码已经被清除了，这时将硬盘数据线拔下防止再次开机的二次感染。 \n第二招 ：乾坤大挪移这次开机就不要硬盘里 但是要引导设备（光驱或U盘）“诶” 有人肯定猜到了那就是史上最恶毒，最邪恶，让新手心惊肉跳，老手冷很直流，终极杀毒法 “刷BIOS”。再次说明：非专业人士切勿轻易尝试！！！！第一种方法(用到的工具DOS启动盘,BOIS刷新工具,BOIS更新文件文件) 直接刷 BIOS 怎么刷BIOS我就不多说了网上有的是教程.... 第二种方法 (用到的工具DOS启动盘,BOIS刷新工具,BOIS更新文件文件) //真对BIOS被损坏的用户--要求两台机器BIOS芯片型号相同否则危险刷// 先将正常的电脑硬盘数据线拔出然后开机，按正常步骤引导入DOS，运行刷BIOS程序，在提示是否进行刷新时，先不要执行刷新，小心将BIOS芯片拔出来，再将带有病毒主题的BIOS 芯片插上，插紧后，开始刷新。完成后拔出芯片,插到被病毒感染的计算机上接上硬盘线,相信我奇迹就会出现在你的眼前.....BMW病毒就是这样轻松**掉。。。 如要引用请注明 原创 以上内容由Mickrisoft创鑫科技 杨晓野 所著 原创光荣剽窃可耻',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(74,'shell.png','shell-png',1490833969,1490833969,'a:5:{s:4:\"name\";s:9:\"shell.png\";s:4:\"path\";s:35:\"/usr/uploads/2017/03/3205730225.png\";s:4:\"size\";i:39990;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',1,6,NULL,'attachment','publish',NULL,0,'1','0','1',78),(77,'关于LVS负载均衡做个总结','77',1490837340,1490842409,'<!--markdown-->LVS是Linux Virtual Server的简写, 意即Linux虚拟服务器，是一个虚拟的服务器集群系统. 本项目在1998年5月由章文嵩博士成立，是中国国内最早出现的自由软件项目之一.    --来自百度百科\n\n\n<!--more-->\n\n\n关于LVS的详细介绍， 由于网上已经有很多介绍， 我在这里就不介绍了， 推荐几个我看了之后感觉不错的文章地址：\n1. [舒の随想日记->从一个开发的角度看负载均衡和LVS][1]\n2. [IT瘾->LVS快速搭建教程][2]\n3. [MacoLee->LVS安装使用详解][3]\n4. [LVS在?规模?络环境中的应?][4]\n\n由于我暂时只搭建过LVS/DR模式, 所以我就只写这一个模式的搭建方法:\n使用环境: WIN10安装VMWARE PLAYER12虚拟机, 创建3个CentOS6.8的虚拟机, 一个作为LVS的Load Balnacer, 两个作为LVS的RealServer.\n当然, 首先肯定是要安装ipvs的管理器ipvsadm:\n\n    yum install -y ipvadm\n\n为了方便在搭建环境时不会被多个ip弄乱, 我修改了虚拟机的host\n\n    /etc/hosts\n    192.168.101.10 vip #此为我自己设置的虚拟ip\n    192.168.101.101 lvs #此为我的Load Balnacer的ip\n    192.168.101.102 rs1 #此为我的RealServer1的ip\n    192.168.101.103 rs2 #此为我的RealServer2的ip\n\n然后可以使用scp命令来把host文件覆盖到其他虚拟机上\n\n    scp /etc/hosts rs1:/etc/hosts\n    scp /etc/hosts rs2:/etc/hosts\n\nLoad Balnacer中使用的命令:\n\n    ifconfig eth0:0 vip broadcast vip netmask 255.255.255.255 #绑定VIP到Load Balnacer服务器的eth0:0网卡\n    ipvsadm –C      <==手工清空原来LVS路由表内容\n    ipvsadm --set 30 5 60   <== 设置连接超时值\n    ipvsadm -A -t vip:80 -s wrr -p 20  <== -A添加地址，-t指定VIP TCP端口，-s指定调度算法–p会话保持时间\n    ipvsadm -a -t vip:80 -r rs1:80 -g -w 1  <== -a指定真实服务器， -t lvs上VIP，-r真实服务器ip及端口，-w权重值，-g先择DR模式（-m为NAT模式）\n    ipvsadm -a -t vip:80 -r rs2:80 -g -w 1\n    ipvsadm -L –n      <== 查看路由表内容\n\nipvsadm中各参数的意义摘自[LVS中文站点][5]:\n\n> -A --add-service 在内核的虚拟服务器表中添加一条新的虚拟服务器记录。也 就是增加一台新的虚拟服务器。\n> -E --edit-service 编辑内核虚拟服务器表中的一条虚拟服务器记录。\n> -D --delete-service 删除内核虚拟服务器表中的一条虚拟服务器记录。\n> -C --clear 清除内核虚拟服务器表中的所有记录。\n> -R --restore 恢复虚拟服务器规则\n> -S --save 保存虚拟服务器规则，输出为-R 选项可读的格式\n> -a --add-server 在内核虚拟服务器表的一条记录里添加一条新的真实服务器 记录。也就是在一个虚拟服务器中增加一台新的真实服务器\n> -e --edit-server 编辑一条虚拟服务器记录中的某条真实服务器记录\n> -d --delete-server 删除一条虚拟服务器记录中的某条真实服务器记录\n> -L|-l --list 显示内核虚拟服务器表\n> -Z --zero 虚拟服务表计数器清零（清空当前的连接数量等）\n> --set tcp tcpfin udp 设置连接超时值\n> --start-daemon 启动同步守护进程。他后面可以是master 或backup，用来说 明LVS Router 是master 或是backup。在这个功能上也可以采用keepalived 的 VRRP 功能。\n> --stop-daemon 停止同步守护进程\n> -h --help 显示帮助信息 其他的选项:\n> -t --tcp-service service-address 说明虚拟服务器提供的是tcp 的服务 [vip:port] or [real-server-ip:port]\n> -u --udp-service service-address 说明虚拟服务器提供的是udp 的服务 [vip:port] or [real-server-ip:port]\n> -f --fwmark-service fwmark 说明是经过iptables 标记过的服务类型。\n> -s --scheduler scheduler 使用的调度算法，有这样几个选项 rr|wrr|lc|wlc|lblc|lblcr|dh|sh|sed|nq, 默认的调度算法是： wlc.\n> -p --persistent [timeout] 持久稳固的服务。这个选项的意思是来自同一个客 户的多次请求，将被同一台真实的服务器处理。timeout 的默认值为300 秒。\n> -M --netmask netmask persistent granularity mask\n> -r --real-server server-address 真实的服务器[Real-Server:port]\n> -g --gatewaying 指定LVS 的工作模式为直接路由模式（也是LVS 默认的模式）\n> -i --ipip 指定LVS 的工作模式为隧道模式\n> -m --masquerading 指定LVS 的工作模式为NAT 模式\n> -w --weight weight 真实服务器的权值\n> --mcast-interface interface 指定组播的同步接口\n> -c --connection 显示LVS 目前的连接 如：ipvsadm -L -c\n> --timeout 显示tcp tcpfin udp 的timeout 值 如：ipvsadm -L --timeout\n> --daemon 显示同步守护进程状态\n> --stats 显示统计信息\n> --rate 显示速率信息\n> --sort 对虚拟服务器和真实服务器排序输出\n> --numeric -n 输出IP 地址和端口的数字形式\n\nRealServer中使用的命令:\n\n    echo 1 > /proc/sys/net/ipv4/conf/lo/arp_ignore   \n    echo 2 > /proc/sys/net/ipv4/conf/lo/arp_announce   \n    echo 1 > /proc/sys/net/ipv4/conf/all/arp_ignore   \n    echo 2 > /proc/sys/net/ipv4/conf/all/arp_announce\n    ifconfig lo:0 vip broadcast vip netmask 255.255.255.255 up  \n    route add -host vip dev lo:0\n\n其中arp_ignore和arp_announce的意思, 摘自[官方文档][6]\n\n> arp_announce - INTEGER 	\n>     Define different restriction levels for announcing the local 	source IP address from IP packets in ARP requests sent on 	\n> interface: 	\n>     0 - (default) Use any local address, configured on any interface 	\n>     1 - Try to avoid local addresses that are not in the target\'s subnet for this interface. This mode is useful when target hosts reachable via this interface require the source IP address in ARP requests to be part of their logical network configured on the receiving interface. When we generate the request\n> we will check all our subnets that include the target IP and will\n> preserve the source address if it is from such subnet. If there is no\n> such subnet we select source 	address according to the rules for level 2. 	\n>     2 - Always use the best local address for this target. In this mode we ignore the source address in the IP packet and try to select local address that we prefer for talks with the target host. Such\n> local address is selected by looking 	for primary IP addresses on all our subnets on the outgoing interface that include the target IP address. If no suitable local address is found we select the first local address we have on the outgoing interface or on all other interfaces, with the hope we will receive reply for our request and even sometimes no matter the source IP address we announce.\n> \n> 	The max value from conf/{all,interface}/arp_announce is used.\n> \n> 	Increasing the restriction level gives more chance for receiving answer from the resolved target while decreasing the level announces more valid sender\'s information.\n> \n> arp_ignore - INTEGER 	\n>     Define different modes for sending replies in response to received ARP requests that resolve local target IP\n> addresses: 	\n>     0 - (default): reply for any local target IP address, configured on any interface 1 - reply only if the target IP address is local address configured on the incoming interface \n>     2 - reply only if the target IP address is local address configured on the incoming interface and both with the sender\'s IP address are part from same subnet on this interface 	\n>     3 - do not reply for local addresses configured with scope host, only resolutions for global and link addresses are replied \n>     4-7 - reserved 	\n>     8 - do not reply for all local addresses\n> \n> 	The max value from conf/{all,interface}/arp_ignore is used when ARP request is received on the {interface}\n\n测试方法:\n在两个RS服务器上同时开启httpd服务并设置分别设置一个不同的首页:\n\n    yum install -y httpd\n    /etc/init.d/httpd start\n    echo \"rs1\"/\"rs2\" > /var/www/html/index.html    //其中rs1对应rs1服务器, rs2对应rs2服务器, /var/www/html/文件夹是我服务器上默认的httpd主页\n\n然后在实体机上浏览器中输入你的虚拟机的虚拟ip, 即可访问RS中的主页, 然后刷新页面, 主页变更即成功\n在Load Balancer中输入如下命令：\n\n    ipvsadm -ln\n\n会出现如下路由列表:\n\n    [root@localhost keepalived]# ipvsadm -ln\n    IP Virtual Server version 1.2.1 (size=4096)\n    Prot LocalAddress:Port Scheduler Flags\n      -> RemoteAddress:Port           Forward Weight ActiveConn InActConn\n    TCP  192.168.101.10:80 wrr\n      -> 192.168.101.102:80           Route   1      3          8         \n      -> 192.168.101.103:80           Route   1      1          7 \n\n其中InActConn列即为触发次数, 这样便可确定你的LVS搭建成功了.\n\nPS: 如果按照这个顺序无法在实体机上正常访问, 请关闭Load Balancer, RS1, RS2的防火墙或者将ip地址加入到防火墙中\n关闭防火墙的命令:\n\n    service iptables stop\n\n\n  [1]: http://blog.hesey.net/2013/02/introduce-to-load-balance-and-lvs-briefly.html\n  [2]: http://itindex.net/detail/42175-lvs\n  [3]: http://www.cnblogs.com/MacoLee/p/5856858.html\n  [4]: http://velocity.oreilly.com.cn/2012/ppts/pukong.pdf\n  [5]: http://zh.linuxvirtualserver.org/node/5\n  [6]: http://kb.linuxvirtualserver.org/wiki/Using_arp_announce/arp_ignore_to_disable_ARP',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(78,'LVS+Nginx的简单总结','78',1490841648,1490841648,'<!--markdown-->简单来说:\n1. LVS可以适配大流量, Nginx相比LVS来说适配不了那么大的流量\n2. LVS如果访问一个服务器, 这个服务器挂掉的时候, 那LVS相当于访问失败了, 但是Nginx在访问到一个挂掉的服务器之后还会继续访问下一个服务器, 指导服务器有响应\n3. 所以LVS + Nginx以后， LVS可以在前面控制流量, LVS对应的每一个Nginx在后端对应多太服务器, 这样既可以控制Nginx被访问的流量, 也可以防止在一台服务器挂掉的时候这次的访问都被挂掉\n\n\n<!--more-->\n\n\n具体还是要参考一些资料, 我参考的是以下两个:\n[BuquTianya的专栏->关于LVS+Nginx为什么会被同时使用的思考][1]\n[Nginx、LVS及HAProxy负载均衡软件的优缺点详解][2]\n\n\n  [1]: http://blog.csdn.net/BuquTianya/article/details/52076153\n  [2]: http://www.csdn.net/article/2014-07-24/2820837',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(79,'Keepalive + LVS + Nginx简单总结','79',1490843280,1490843380,'<!--markdown-->简单来说:\n1. Keepalive可以防止LVS的Load Balnacer服务器挂掉以及RealServer挂掉所导致的服务器无法访问.\n\n\n<!--more-->\n\n\nKeepalived简单流程:\n在配置Keepalived后Load Balnacer服务器会有一个主服务器, 以及N个备用服务器, 当主服务器挂掉之后, Keepalived会自动切换到备用服务器来代替主服务器工作, 然后在主服务器恢复之后Keepalived会自动使用主服务器替换掉备份服务器来工作, 备份服务器继续预留. 而当RealServer挂掉之后, Keepalived会把无法访问的RealServer从ipvs中的路由表内删除, 但RealServer恢复后, Keepalived无法自动恢复RealServer的工作, 需要重启Keepalived来恢复原始路由表, 如此便可保证整个服务器的稳定性.\n2.LVS + Nginx在上一篇文章总结过， 便不在多说.\n\nKeepalived和LVS一起配置之后, Load Balnacer的路由表以及虚拟ip绑定便不需要使用ipvsadm来配置, 只需配置好/etc/keepalived/keepalived.conf文件即可\n\n具体实现方法, 参考文章:\n[追马->LVS+keepalived+nginx+tomcat部署实现][1]\n\n[附件][2]\n\n\n  [1]: http://lovelace.blog.51cto.com/1028430/1550188\n  [2]: http://www.rootblack.com/Downloads/lvs-nginx-keepalived.7z',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(80,'the-little-redis-book','80',1490856480,1490858486,'<!--markdown-->[the-little-redis-book][2]\n\n\n  [2]: https://github.com/JasonLai256/the-little-redis-book/blob/master/cn/redis.md',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(66,'6a04f8198618367a390307752a738bd4b21ce562.jpg','6a04f8198618367a390307752a738bd4b21ce562-jpg',1482941533,1482941533,'a:5:{s:4:\"name\";s:44:\"6a04f8198618367a390307752a738bd4b21ce562.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2016/12/2497557323.jpg\";s:4:\"size\";i:49349;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";}',1,1,NULL,'attachment','publish',NULL,0,'1','0','1',67),(67,'handled Exception: System.DllNotFoundException: Unable to load DLL \'xxx.dll\': 找不到指定的模块。 (Exception from HRESULT: 0x8007007E)','67',1482941520,1482942857,'<!--markdown-->终于把这个问题解决了, 耗时大概5个小时了吧.\n\n\n<!--more-->\n\n事情呢, 是这样的, 我在我电脑上写了一个调用C++ DLL(编译 by vs2015)的C#的小程序, 然后放在别人的电脑上运行, 然后运行之后提示这个错误, 接着我就找了好多Blog, 各种msdn以及stackoverflow, 牛逼的地方就在, 几乎所有人的回复都是一样的, 让我用[dependencywalker][1]这么一个软件查找缺失的关联DLL, 更牛逼的地方就在我把所有能找到的提示关联的DLL都找到了, 然后还是运行错误. \n我都用到什么解决方案了呢, 安装缺失软件, 包括安装Visual C++ Redistributable for Visual Studio 2015 / 2013(然而尼玛2013的可以安装, 2015的安装失败啊, 不要问我为什么, 我也想知道), 以及qt啊什么的各种我电脑上有的, (顺便说一句, 安装vs2015的时候居然提示我我需要一个更新的系统(vs2015已经不支持win7了么)), 另外一台电脑没有的软件, 以及各种系统更新, ie11安装甚至从win7 升级到win7 sp1\n![W0201507234754120677651.jpg][2]\n然后我是怎么解决的这个问题呢, 解决方案我现在想想都想去死, 用我vs2010重新编译了一次那个DLL就可以用了\n![6a04f8198618367a390307752a738bd4b21ce562.jpg][3]\n\n问题总结: 其实就是缺少VS2015 C++的运行环境, 但是VS2015 C++的运行环境我打死都安装不上, 不要问我为什么不用VS2013编译, 毕竟我安装了VS2013的Runtime, 我也想, 但是我电脑的VS2013疯了, 打开工程整个VS都崩溃, 重新安装卡死在ASP.NET的安装, 等了半个小时了都没反应, 所以\n\n![mp25098274_1438309740517_1_th.jpeg][4]\n\n\n  [1]: http://www.dependencywalker.com/\n  [2]: http://www.rootblack.com/usr/uploads/2016/12/470966351.jpg\n  [3]: http://www.rootblack.com/usr/uploads/2016/12/2497557323.jpg\n  [4]: http://www.rootblack.com/usr/uploads/2016/12/3002083224.jpeg',0,1,NULL,'post','publish',NULL,1,'1','0','1',0),(69,'W0201507234754120677651.jpg','W0201507234754120677651-jpg',1482942566,1482942566,'a:5:{s:4:\"name\";s:27:\"W0201507234754120677651.jpg\";s:4:\"path\";s:34:\"/usr/uploads/2016/12/470966351.jpg\";s:4:\"size\";i:23757;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";}',2,1,NULL,'attachment','publish',NULL,0,'1','0','1',67),(70,'mp25098274_1438309740517_1_th.jpeg','mp25098274_1438309740517_1_th-jpeg',1482942610,1482942610,'a:5:{s:4:\"name\";s:34:\"mp25098274_1438309740517_1_th.jpeg\";s:4:\"path\";s:36:\"/usr/uploads/2016/12/3002083224.jpeg\";s:4:\"size\";i:33434;s:4:\"type\";s:4:\"jpeg\";s:4:\"mime\";s:10:\"image/jpeg\";}',3,1,NULL,'attachment','publish',NULL,0,'1','0','1',67),(71,'C# 多线程刷新界面','71',1483016194,1483016194,'<!--markdown--><!--more-->\n\n    private void button1_Click(object sender, EventArgs e)\n    {\n        new Thread(new ThreadStart(() =>\n        {\n            for (int i = 0; i < 10000; i++)\n            {\n                int a = add(i);\n                Thread.Sleep(1000);\n                this.Invoke((Action)(() =>\n               {\n                    listBox1.Items.Add(a);\n                }));\n            }\n        })).Start();\n    }',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(82,'python datetime, re, json, file.seek','82',1491483682,1491483682,'<!--markdown-->一些基础的东西的用法， 做个笔记\n\n\n<!--more-->\n\n    import re\n    import os\n    import time\n    import json\n    import urllib2\n    import datetime\n    \n    LOG_PATH = r\'D:\\current.log\'\n    INDEX_PATH = r\'D:\\\\\'\n    ONLINE_PATH = r\'http://localhost:81/\'\n    INDEX_NAME = r\'index.html\'\n    JSON_REFRESH_COUNT = 5 * 60\n    DATE_TIME_FLAG_STR = \'2017-04-05 00:01:00\'\n    DATE_TIME_TYPE = \"%Y-%m-%d %H:%M:%S\"\n    GET_READ_DATE = re.compile(r\'(.*?)\\[\')\n    PROC_REBBISH = re.compile(r\'(.*?)\\[.*?send rubbish messages num:(.*?)\\n\')\n    PROC_DEDUPLICATION = re.compile(r\'(.*?)\\[.*?send deduplication messages num: (.*?)\\n\')\n    PROC_RECEIVE = re.compile(r\'(.*?)\\[.*?receive messages num: (.*?)\\n\')\n        \n    def readLog(date_time_flag, cursor = 0):\n        count = 0\n        rubbish_messages_num = 0\n        deduplication_messages_num = 0\n        receive_messages_num = 0\n        fr = open(LOG_PATH, \'r\')\n        fr.seek(cursor, 0)\n        json_value = {}\n        json_value[\'rubbish_messages_num\'] = 0\n        json_value[\'deduplication_messages_num\'] = 0\n        json_value[\'receive_messages_num\'] = 0\n        \n        while True:\n            line = fr.readline()\n            line_length = len(line)\n            cursor += line_length\n            ans = GET_READ_DATE.findall(line)\n            try:\n                date_time_read = getDateTimeType(ans[0].strip())\n            except:\n                continue\n            if line and date_time_flag >= date_time_read:\n                \n                count += 1\n                if \'send rubbish messages num:\' in line:\n                    ans = PROC_REBBISH.findall(line)[0]\n                    date_time_read = getDateTimeType(ans[0].strip())\n                    num_read = ans[1].strip()\n                    json_value[\'rubbish_messages_num\'] += int(num_read)\n                elif \'send deduplication messages num:\' in line:\n                    ans = PROC_DEDUPLICATION.findall(line)[0]\n                    date_time_read = getDateTimeType(ans[0].strip())\n                    num_read = ans[1].strip()\n                    json_value[\'deduplication_messages_num\'] += int(num_read)\n                elif \'receive messages num:\' in line:\n                    ans = PROC_RECEIVE.findall(line)[0]\n                    date_time_read = getDateTimeType(ans[0].strip())\n                    num_read = ans[1].strip()\n                    json_value[\'receive_messages_num\'] += int(num_read)\n            else:\n                break\n            \n        fr.close()\n        \n        return json_value, cursor\n        \n    def checkReadStart(date_time_flag):\n        date_time_now = datetime.datetime.now()\n        if date_time_now > date_time_flag:\n            return True\n            \n        return False\n        \n    def getDateTimeType(date_time):\n        return datetime.datetime.strptime(date_time, DATE_TIME_TYPE)\n        \n    def getCursorDateFlag(path):\n        html = urllib2.urlopen(path).read()\n        json_value = json.loads(html)\n        \n        return json_value, json_value[\'cursor\'], getDateTimeType(json_value[\'date_time_flag\'])\n        \n    if __name__ == \'__main__\':\n        json_value = {}\n        cursor = 0\n        date_time_flag = getDateTimeType(DATE_TIME_FLAG_STR)\n        try:\n            json_value, cursor, date_time_flag = getCursorDateFlag(ONLINE_PATH + INDEX_NAME)\n        except:\n            pass\n        print cursor, date_time_flag\n        \n        while True:\n            if checkReadStart(date_time_flag):\n                time_start = time.time()\n                sub_json_value, cursor = readLog(date_time_flag, cursor)\n                time_end = time.time()\n                sub_json_value[\'take_time\'] = time_end - time_start\n                json_value[str(date_time_flag)] = sub_json_value\n                date_time_flag += datetime.timedelta(seconds = 1)\n                json_value[\'cursor\'] = cursor\n                json_value[\'date_time_flag\'] = str(date_time_flag)\n                fw = open(INDEX_PATH + INDEX_NAME, \'w\')\n                fw.write(json.dumps(json_value, sort_keys = True))\n                fw.close()\n                if len(json_value) >= JSON_REFRESH_COUNT:\n                    os.rename(INDEX_PATH + INDEX_NAME, INDEX_PATH + INDEX_NAME + str(time.mktime(date_time_flag.timetuple())))\n                    json_value = {}',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(83,'数组指针和指针数组','83',1491525034,1491525034,'<!--markdown--><!--more-->\n\n    做数据结果的课设，遇到了二维指针传参问题，本以为很简单，结果发现自己前面的基础好久没练都生疏了，赶紧补一下数组和指针有关的知识。\n    \n    数组指针（也称行指针）\n    定义 int (*p)[n];\n    ()优先级高，首先说明p是一个指针，指向一个整型的一维数组，这个一维数组的长度是n，也可以说是p的步长。也就是说执行p+1时，p要跨过n个整型数据的长度。\n\n    如要将二维数组赋给一指针，应这样赋值：\n    int a[3][4];\n    int (*p)[4];  //该语句是定义一个数组指针，指向含4个元素的一维数组。\n     p=a;         //将该二维数组的首地址赋给p，也就是a[0]或&a[0][0]\n     p++;         //该语句执行过后，也就是p=p+1;p跨过行a[0][]指向了行a[1][]\n    \n    所以数组指针也称指向一维数组的指针，亦称行指针。\n\n    指针数组\n    定义 int *p[n];\n    []优先级高，先与p结合成为一个数组，再由int*说明这是一个整型指针数组，它有n个指针类型的数组元素。这里执行p+1是错误的，这样赋值也是错误的：p=a；因为p是个不可知的表示，只存在p[0]、p[1]、p[2]...p[n-1],而且它们分别是指针变量可以用来存放变量地址。但可以这样 *p=a; 这里*p表示指针数组第一个元素的值，a的首地址的值。\n\n    如要将二维数组赋给一指针数组:\n    int *p[3];\n    int a[3][4];\n    for(i=0;i<3;i++)\n    p[i]=a[i];\n    这里int *p[3] 表示一个一维数组内存放着三个指针变量，分别是p[0]、p[1]、p[2]\n所以要分别赋值。\n\n    这样两者的区别就豁然开朗了，数组指针只是一个指针变量，似乎是C语言里专门用来指向二维数组的，它占有内存中一个指针的存储空间。指针数组是多个指针变量，以数组形式存在内存当中，占有多个指针的存储空间。\n    还需要说明的一点就是，同时用来指向二维数组时，其引用和用数组名引用都是一样的。\n比如要表示数组中i行j列一个元素：\n    *(p[i]+j)、*(*(p+i)+j)、(*(p+i))[j]、p[i][j]',0,6,NULL,'post_draft','publish',NULL,0,'1','1','1',0),(84,'python class, server, httpget','84',1491706380,1491706655,'<!--markdown-->mark\n\n\n<!--more-->\n\n    # -*-coding:utf-8-*-\n    \n    import re\n    import os\n    import time\n    import json\n    import urllib2\n    import datetime\n    from BaseHTTPServer import BaseHTTPRequestHandler, HTTPServer\n    \n    LOG_PATH = os.getcwd() + \'/\'\n    LOG_NAME = \'current.log\'\n    INDEX_PATH = os.getcwd()\n    ONLINE_PATH = r\'http://localhost:81/\'\n    INDEX_NAME = r\'backup.log\'\n    JSON_REFRESH_COUNT = 5 * 60\n    DATE_TIME_TYPE = \"%Y-%m-%d %H:%M:%S\"\n    GET_READ_DATE = re.compile(r\'(.*?)\\[\')\n    PROC_REBBISH = re.compile(r\'(.*?)\\[.*?send rubbish messages num:(.*?)\\n\')\n    PROC_DEDUPLICATION = re.compile(r\'(.*?)\\[.*?send deduplication messages num: (.*?)\\n\')\n    PROC_RECEIVE = re.compile(r\'(.*?)\\[.*?receive messages num: (.*?)\\n\')\n    #1491322554\n    class MyRequestHandler(BaseHTTPRequestHandler):\n        def do_GET(self):\n            print \'do_GET\'\n            path = self.path\n            paramters = {}\n            if len(path.split(\'?\')) > 1:\n                path_parameters = path.split(\'?\')[1]\n                paramters = {str(path_parameters.split(\'=\')[0]) : str(path_parameters.split(\'=\')[1])}\n                print paramters\n                timestamp = paramters[\'t\']\n                getJsonValue = GetJsonValue()\n                buf = getJsonValue.getBuf(float(timestamp))\n                self.wfile.write(buf)\n            \n        \n            \n    class GetJsonValue():\n        def getBuf(self, timestamp):\n            date_time_get = self.timestamp2Datetime(timestamp)\n            print date_time_get\n            json_value = {}\n            cursor = 0\n            date_time_flag = date_time_get\n            try:\n                cursor, date_time_flag = self.getCursorDateFlag(ONLINE_PATH + INDEX_NAME)\n                print cursor, date_time_flag\n            except:\n                pass\n            if date_time_get < date_time_flag or date_time_get.date() != date_time_flag.date():\n                cursor = 0\n            print cursor, date_time_flag\n            time_start = time.time()\n            sub_json_value, cursor, date_time_flag = self.readLog(date_time_get, cursor)\n            time_end = time.time()\n            sub_json_value[\'take_time\'] = time_end - time_start\n            json_value[str(date_time_get)] = sub_json_value\n            json_value[\'cursor\'] = cursor\n            json_value[\'date_time_flag\'] = str(date_time_flag)\n            fw = open(INDEX_PATH + INDEX_NAME, \'w\')\n            fw.write(json.dumps(json_value, sort_keys = True))\n            fw.close()\n            return json.dumps(json_value, sort_keys = True)\n            \n        def readLog(self, date_time_get, cursor = 0):\n            print \'readLog\'\n            count = 0\n            date_time_flag = \'0\'\n            rubbish_messages_num = 0\n            deduplication_messages_num = 0\n            receive_messages_num = 0\n            fr = open(LOG_PATH + LOG_NAME, \'r\')\n            fr.seek(cursor, 0)\n            json_value = {}\n            json_value[\'rubbish_messages_num\'] = 0\n            json_value[\'deduplication_messages_num\'] = 0\n            json_value[\'receive_messages_num\'] = 0\n            while True:\n                line = fr.readline()\n                line_length = len(line)\n                ans = GET_READ_DATE.findall(line)\n                try:\n                    date_time_read = self.getDateTimeType(ans[0].strip())\n                except:\n                    continue\n                #print date_time_get, date_time_read\n                if line:\n                    if date_time_get < date_time_read:\n                        #print \'small\'\n                        break\n                    if date_time_get > date_time_read:\n                        #print \'bigger\'\n                        cursor += line_length\n                        continue\n                    if date_time_get == date_time_read:\n                        #print \'same\'\n                        date_time_flag = str(date_time_get + datetime.timedelta(seconds = 1))\n                        cursor += line_length\n                        count += 1\n                        if \'send rubbish messages num:\' in line:\n                            ans = PROC_REBBISH.findall(line)[0]\n                            date_time_read = self.getDateTimeType(ans[0].strip())\n                            num_read = ans[1].strip()\n                            json_value[\'rubbish_messages_num\'] += int(num_read)\n                        elif \'send deduplication messages num:\' in line:\n                            ans = PROC_DEDUPLICATION.findall(line)[0]\n                            date_time_read = self.getDateTimeType(ans[0].strip())\n                            num_read = ans[1].strip()\n                            json_value[\'deduplication_messages_num\'] += int(num_read)\n                        elif \'receive messages num:\' in line:\n                            ans = PROC_RECEIVE.findall(line)[0]\n                            date_time_read = self.getDateTimeType(ans[0].strip())\n                            num_read = ans[1].strip()\n                            json_value[\'receive_messages_num\'] += int(num_read)\n                else:\n                    break\n                \n            fr.close()\n            print count\n            return json_value, cursor, date_time_flag\n            \n        def checkReadStart(self, date_time_flag):\n            print \'checkReadStart\'\n            date_time_now = datetime.datetime.now()\n            if date_time_now > date_time_flag:\n                return True\n                \n            return False\n            \n        def getDateTimeType(self, date_time):\n            return datetime.datetime.strptime(date_time, DATE_TIME_TYPE)\n            \n        def timestamp2Datetime(self, timestamp):\n            return datetime.datetime.fromtimestamp(timestamp)\n            \n        def getCursorDateFlag(self, path):\n            fr = open(INDEX_PATH + INDEX_NAME, \'r\')\n            json_value = json.loads(fr.readline())\n            \n            return json_value[\'cursor\'], self.getDateTimeType(json_value[\'date_time_flag\'])\n            \n    if __name__ == \'__main__\':\n        try:\n            server = HTTPServer((\'\', 80), MyRequestHandler)\n            print(\'Started http server\')\n            server.serve_forever()\n        except KeyboardInterrupt:\n            print(\'^C received, shutting down server\')\n            server.socket.close()',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(85,'python mysql, json','85',1491706440,1491706620,'<!--markdown-->mark\n\n\n<!--more-->\n\n\n    import os\n    import json\n    import time\n    import datetime\n    import urllib2\n    import MySQLdb\n    \n    LOG_DIR = os.getcwd() + \'/\'\n    LOG_NAME = \'client.log\'\n    ONLINE_PATH = r\'http://localhost:81/\'\n    INDEX_NAME = r\'index.html\'\n    DATE_TIME_FLAG_STR = \'2017-04-05 00:01:00\'\n    DATE_TIME_TYPE = \"%Y-%m-%d %H:%M:%S\"\n    DB_HOST = \'127.0.0.1\'\n    DB_USER = \'root\'\n    DB_PWD = \'root\'\n    DB_NAME = \'test\'\n    DB_PORT = 3306\n    JSON_DEDUPLICATION = \'deduplication_messages_num\'\n    JSON_RECEIVE = \'receive_messages_num\'\n    JSON_RUBBISH = \'rubbish_messages_num\'\n    JSON_DATE_TIME_FLAG = \'date_time_flag\'\n    URL_TEMP = r\'http://192.168.11.165:81/index.html?t=1491321660\'\n    URL_SLAVE = r\'http://192.168.204.141/index.html?t=\'\n    URL_NGINX1 = r\'http://192.168.204.144/index.html?t=\'\n    URL_NGINX2 = r\'http://192.168.204.143/index.html?t=\'\n    URL_LIST = [URL_SLAVE, URL_NGINX1, URL_NGINX2]\n    # time.mktime(datetime.datetime.strptime(\'2017-04-05 00:01:03\', \"%Y-%m-%d %H:%M:%S\").timetuple())\n    \n    def insertMessagesTable(cur, date_time, json_value):\n        sql = r\'insert into messages(timestamp, info) values(\"\' + date_time + \'\", \"\' + json_value + \'\");\'\n        #print sql\n        cur.execute(sql)\n        \n    def connectDB():\n        return MySQLdb.connect(host = DB_HOST, user = DB_USER, passwd = DB_PWD,db = DB_NAME, port=DB_PORT)\n        \n    def datetime2Timestamp(date_time):\n        return time.mktime(getDateTimeType(date_time).timetuple())\n        \n    def getDateTimeType(date_time):\n        return datetime.datetime.strptime(date_time, DATE_TIME_TYPE)\n        \n    def getJsonValueFromURL(url):\n        #print \'url:\', url\n        return json.loads(urllib2.urlopen(url).read())\n        \n    def getSignalJsonValue(url):\n        #time_start = time.time()\n        json_value = getJsonValueFromURL(url)\n        #print url\n        #print json_value\n        #time_end = time.time()\n        #print \'use time:\', time_end - time_start\n        json_keys = json_value.keys()\n        #print json_keys, type(json_keys)\n        date_time = \'0\'\n        sub_json_value = \'0\'\n        for key in json_keys:\n            if \'20\' in key:\n                date_time = key\n                break\n        sub_json_value = json_value[date_time]\n        return date_time, sub_json_value\n                \n    def getDataFlag(path):\n        if not os.path.exists(path):\n            cur_time = time.time()\n            zero_time = cur_time - cur_time % 86400 + time.timezone + 86400\n            json_value = {JSON_DATE_TIME_FLAG : zero_time}\n            fw = open(path, \'w\')\n            fw.write(json.dumps(json_value))\n            fw.close()\n            \n        fr = open(path, \'r\')\n        return json.loads(fr.readline())\n        \n    if __name__ == \'__main__\':\n        conn = connectDB()\n        cur = conn.cursor()\n        date_time_flag = getDataFlag(LOG_DIR + LOG_NAME)[JSON_DATE_TIME_FLAG]\n        #print date_time_flag\n        while True:\n            \n            if time.time() > date_time_flag + 1:\n                print time.time(), date_time_flag\n                json_value = {}\n                json_value[JSON_DEDUPLICATION] = 0\n                json_value[JSON_RECEIVE] = 0\n                json_value[JSON_RUBBISH] = 0\n                date_time = \'0\'\n                for url in URL_LIST:\n                    date_time, sub_json_value = getSignalJsonValue(url + str(date_time_flag))\n                    json_value[JSON_DEDUPLICATION] += sub_json_value[JSON_DEDUPLICATION]\n                    json_value[JSON_RECEIVE] += sub_json_value[JSON_RECEIVE]\n                    json_value[JSON_RUBBISH] += sub_json_value[JSON_RUBBISH]\n                    #print sub_json_value\n                    \n                #print json_value\n                insertMessagesTable(cur, str(int(datetime2Timestamp(date_time))), str(json_value))\n                date_time_flag += 1\n                json_value = {JSON_DATE_TIME_FLAG : date_time_flag}\n                fw = open(LOG_DIR + LOG_NAME, \'w\')\n                fw.write(json.dumps(json_value))\n                fw.close()\n        cur.close()\n        conn.close()',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(87,'python datetime, time','87',1491962257,1491962257,'<!--markdown-->一些常用时间类型互相转换\n\n\n<!--more-->\n\n    def DateTimeStr2DateTime(self, date_time):\n            return datetime.datetime.strptime(date_time, DATE_TIME_TYPE)\n            \n    def timestamp2Datetime(self, timestamp):\n            return datetime.datetime.fromtimestamp(timestamp)\n    \n    def datetime2Timestamp(date_time):\n        return time.mktime(getDateTimeType(date_time).timetuple())',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(88,'How to install Maven on CentOS','88',1492999795,1492999795,'<!--markdown-->文章来自：[这里][1]\n\n\n<!--more-->\n\n    $ sudo tar xzf apache-maven-3.0.5-bin.tar.gz -C /usr/local\n    $ cd /usr/local\n    $ sudo ln -s apache-maven-3.0.5 maven\n    \n    $ sudo vi /etc/profile.d/maven.sh\n    \n    export M2_HOME=/usr/local/maven\n    export PATH=${M2_HOME}/bin:${PATH}\n    \n    mvn -version\n\n  [1]: https://preilly.me/2013/05/10/how-to-install-maven-on-centos/',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(89,'python paramiko的用法','89',1493355466,1493355466,'<!--markdown--><!--more-->\n\n\n    # -*- coding: utf-8 -*-\n    \n    import sys\n    import time\n    import paramiko\n    \n    ADDRESS = \'address\'\n    PORT = port\n    USERNAME = \'user\'\n    PASSWORD = \'pwd\'\n    FILE_PATH = r\'D:\\Company\\\\\'\n    FILE_NAME = \'test.txt\'\n    SCP_SHELL = r\'scp \' + FILE_NAME + \' user@address:~\\n\'    //\\n必须写\n    SCP_PWD = \'pwd\\n\'\n    \n    def ssh(address, port, username, password, cmd):\n        passinfo = \'password: \'\n        ssh = paramiko.SSHClient()\n        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n        ssh.connect(address, port, username, password)\n        #stdin, stdout, stderr = ssh.exec_command(\'ls\')\n        #print stdout.readlines()\n        channel = ssh.invoke_shell()\n        channel.send(cmd)\n        buff = \'\'\n        while not buff.endswith(passinfo):\n            try:\n                resp = channel.recv(99999)\n                print \'resp1\', resp, \'--------------\'\n            except Exception, e:\n                print \'Error info:%s connection time.\' % (str(e))\n                channel.close()\n                ssh.close()\n                sys.exit()\n    \n            buff += resp\n            if not buff.find(\'yes/no\') == -1:\n                channel.send(\'yes\\n\')\n                buff = \'\'\n        channel.send(SCP_PWD)\n        print \'enter password\'\n        buff = \'\'\n        while not buff.endswith(\"$ \"):\n            resp = channel.recv(99999)\n            if not resp.find(passinfo) == -1:\n                print \'Error info: Authentication failed.\'\n                channel.close()\n                ssh.close()\n                sys.exit()\n            else:\n                print \'ok\'\n    \n            buff += resp\n    \n        print buff\n        stdin, stdout, stderr = ssh.exec_command(\'rm \' + FILE_NAME)\n    \n        channel.close()\n        ssh.close()\n    \n    def ftp(address, port, username, password, file_path, remote_name):\n        t = paramiko.Transport((address, port))\n        t.connect(username = username, password = password)\n        sftp = paramiko.SFTPClient.from_transport(t)\n        remotepath = \'~\'\n        localpath = file_path\n        sftp.put(localpath, remote_name)\n        t.close()\n    \n    if __name__ == \'__main__\':\n        ftp(ADDRESS, PORT, USERNAME, PASSWORD, FILE_PATH + FILE_NAME, FILE_NAME)\n        #time.sleep(2)\n        ssh(ADDRESS, PORT, USERNAME, PASSWORD, SCP_SHELL)',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(81,'django刚刚碰到的几个坑','81',1490884980,1490885480,'<!--markdown-->坑是因为官方文档根本就特么不准， 不要问我为什么， 版本都是一样的， 就是特么的不对\n\n\n<!--more-->\n\n添加URL访问路径代码：\n修改url.py文件\n\n    from echarts import views\n\n    urlpatterns = [\n        url(r\'^$\', views.index, name=\'index\'),\n        url(r\'^admin/\', admin.site.urls),\n    ]\n\n\n----------\n\n\n设置templates路径：\n修改setting.py文件\n\n    TEMPLATES = [\n        {\n            \'BACKEND\': \'django.template.backends.django.DjangoTemplates\',\n            \'DIRS\': [os.path.join(BASE_DIR, \'echarts\\\\templates\\\\echarts\')],\n            \'APP_DIRS\': True,\n            \'OPTIONS\': {\n                \'context_processors\': [\n                    \'django.template.context_processors.debug\',\n                    \'django.template.context_processors.request\',\n                    \'django.contrib.auth.context_processors.auth\',\n                    \'django.contrib.messages.context_processors.messages\',\n                ],\n            },\n        },\n    ]\n\n\n----------\n\n\ntemplates中有中文会崩溃\n修改settings.py文件\n\n    FILE_CHARSET=\'gb18030\'\n    DEFAULT_CHARSET=\'utf-8\'\n\n\n----------\n\n\n设置static路径来访问js, css等文件\n将static文件夹跟templates文件夹所在根目录并修改settings.py\n    \n    STATICFILES_DIRS = (\n        os.path.join(BASE_DIR , \"echarts\\static\"),\n    )\n    \n    STATIC_URL = \'/static/\'\n\n\n----------\n\n\n修改html中引用js, css等文件\n\n    {% load static %}\n    <script type=\"text/javascript\" src=\"{% static \'echarts.js\' %}\"></script>\n    <script type=\"text/javascript\" src=\"{% static \'shine.js\' %}\"></script>\n',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(90,'nginx配置','90',1513690260,1513696000,'<!--markdown-->\r\n    server {\r\n    listen 80;\r\n    server_name rootblck.com www.rootblack.com;\r\n    root /var/www/blog;\r\n    index index.php index.html index.htm;\r\n\r\n\r\n<!--more-->\r\n\r\n\r\n    location / {\r\n         index index.html index.php;\r\n        if (-f $request_filename/index.html){\r\n            rewrite (.*) $1/index.html break;\r\n        }\r\n        if (-f $request_filename/index.php){\r\n            rewrite (.*) $1/index.php;\r\n        }\r\n        if (!-f $request_filename){\r\n            rewrite (.*) /index.php;\r\n        }\r\n        # First attempt to serve request as file, then\r\n        # as directory, then fall back to displaying a 404.\r\n        try_files $uri $uri/ =404;\r\n        # Uncomment to enable naxsi on this location\r\n        # include /etc/nginx/naxsi.rules\r\n    }\r\n    error_page 404 /404.html;\r\n    error_page 500 502 503 504 /50x.html;\r\n    location = /50x.html {\r\n        root /usr/share/nginx/html;\r\n    }\r\n\r\n    location ~ \\.php$ {\r\n        try_files $uri = 404;\r\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\r\n        fastcgi_pass unix:/run/php/php7.0-fpm.sock;\r\n        fastcgi_index index.php;\r\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\r\n        include fastcgi_params;\r\n    }\r\n}\r\n',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(91,'Unnamed QQ Screenshot20171221092014.png','Unnamed-QQ-Screenshot20171221092014-png',1513819237,1513819237,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20171221092014.png\";s:4:\"path\";s:35:\"/usr/uploads/2017/12/2601275577.png\";s:4:\"size\";i:10506;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',1,1,NULL,'attachment','publish',NULL,0,'1','0','1',94),(92,'Unnamed QQ Screenshot20171221092158.png','Unnamed-QQ-Screenshot20171221092158-png',1513819340,1513819340,'a:5:{s:4:\"name\";s:39:\"Unnamed QQ Screenshot20171221092158.png\";s:4:\"path\";s:34:\"/usr/uploads/2017/12/134803373.png\";s:4:\"size\";i:8554;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}',2,1,NULL,'attachment','publish',NULL,0,'1','0','1',94),(94,'爬虫抓取腾讯视频原始地址','94',1513819860,1513842091,'<!--markdown-->[功能测试地址][1]\r\n\r\n先贴上视频样例地址: [https://v.qq.com/iframe/preview.html?vid=l0384c56ov0][2]\r\n\r\n\r\nF12并点击播放按钮， 然后过滤get关键字， 会看到![][3]\r\n过滤MP4关键字， 会看到![][4]\r\n其中getvinfo用来获取视频名称以及视频地址\r\ngetvkey用来获取播放地址所使用的key\r\nMP4过滤出来的地址则是视频的原始地址\r\n\r\n\r\n<!--more-->\r\n\r\n\r\n查看一下getvinfo地址的发送方式以及发送参数:\r\n\r\n    Request URL:https://vv.video.qq.com/getvinfo\r\n    Request Method:POST\r\n    Status Code:200 \r\n    Remote Address:163.177.89.184:443\r\n    Referrer Policy:no-referrer-when-downgrade\r\n\r\n\r\n    fhdswitch:0    #可以去掉\r\n    encryptVer:5.4    #可以去掉\r\n    sphttps:1    #可以去掉\r\n    otype:xml    #返回值类型: json, xml...\r\n    dtype:3\r\n    ip:    #不知道是发送方id还是接收方id， 可以去掉\r\n    platform:70202    不知道是什么， 反正不能去掉\r\n    charge:0        #可以去掉\r\n    pid:C22E3F4AA580EE9EA87636AA0C793B9A4BDCE0A1    #可以去掉\r\n    guid:9D03BC7FC0846F512484B2C7313E043163A6F811    #全球唯一标识符,不建议去掉,画面20s左右开始卡顿\r\n    defnpayver:1    #可以去掉\r\n    ran:0.13589626410976052    #可以去掉\r\n    ehost:https://v.qq.com/iframe/preview.html?vid=l0384c56ov0    #未知， 不建议去掉\r\n    newplatform:70202    #可以去掉\r\n    vid:l0384c56ov0    #视频id    可以去掉， 只保留vids字段即可\r\n    appver:3.2.19.358    #app版本号， 应该是用来进行访问核算的， 可以去掉\r\n    fp2p:1\r\n    cKey:OS4oAqPPKtUY7MNGrK034xhHCph62nvl797pKrEoPYriNkpKjRzM6bHRVyRW25lejRCyUMntkvGjR4WbmHgBcSLiovK7pxC8Y4-LtYPIi7Svgj_bDKwohJsKgF9zz3Hzd2FT2GvhQh59uXAzzHB9wRKwjqBAtcAjsWW4SuBdVCPiybCn3N1eCPafOG81B91v4lGgckzsM94-wBEnrT6AkNkX9xKvNGTOE6epnpxYJOkCqLHTQ98iYLdTZBl4Lfu1sqq-VumFVeRKbPO1zjtmG7RHLd70TuwqmE386BhKhSxOf1rlzEq-l-ZsP4lE_hgmlv_D_uVIQ9iX2UUQBAQEBGkOXRc    #不知道干嘛用的， 不知道哪里来的， 可以去掉\r\n    vids:l0384c56ov0    #不可去掉\r\n    linkver:2    #可以去掉\r\n    speed:2991    #可以去掉\r\n    refer:    #可以去掉\r\n    utype:-1    #可以去掉\r\n\r\n上面这些参数我基本上都不知道是做什么的， 等我知道了以后会回来补充的\r\n然后看返回值\r\n\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    \r\n    <root>\r\n      <dltype>1</dltype>\r\n      <exem>0</exem>\r\n      <fl>\r\n        <cnt>3</cnt>\r\n        <fi>\r\n          <id>10703</id>    \r\n          <name>sd</name>    #跟请求视频真实地址中的fmt字段有关\r\n          <lmt>0</lmt>\r\n          <sb>1</sb>\r\n          <cname>标清;(270P)</cname>\r\n          <br>35</br>\r\n          <profile>1</profile>\r\n          <drm>0</drm>\r\n          <video>1</video>\r\n          <audio>1</audio>\r\n          <fs>9129132</fs>\r\n          <sl>0</sl>\r\n        </fi>\r\n        <fi>\r\n          <id>10712</id>\r\n          <name>hd</name>    #跟请求视频真实地址中的fmt字段有关\r\n          <lmt>0</lmt>\r\n          <sb>1</sb>\r\n          <cname>高清;(480P)</cname>\r\n          <br>60</br>\r\n          <profile>1</profile>\r\n          <drm>0</drm>\r\n          <video>1</video>\r\n          <audio>1</audio>\r\n          <fs>16021707</fs>\r\n          <sl>1</sl>\r\n        </fi>\r\n        <fi>\r\n          <id>10701</id>\r\n          <name>shd</name>    #应该跟请求视频真实地址中的fmt字段有关\r\n          <lmt>0</lmt>\r\n          <sb>1</sb>\r\n          <cname>超清;(720P)</cname>\r\n          <br>65</br>\r\n          <profile>1</profile>\r\n          <drm>0</drm>\r\n          <video>1</video>\r\n          <audio>1</audio>\r\n          <fs>33703896</fs>\r\n          <sl>0</sl>\r\n        </fi>\r\n      </fl>\r\n      <fp2p>2</fp2p>\r\n      <hs>0</hs>\r\n      <ip>202.43.148.189</ip>\r\n      <ls>0</ls>\r\n      <preview>257</preview>\r\n      <s>o</s>\r\n      <sfl>\r\n        <cnt>0</cnt>\r\n      </sfl>\r\n      <tm>1513819158</tm>\r\n      <vl>\r\n        <cnt>1</cnt>\r\n        <vi>\r\n          <br>60</br>\r\n          <ch>0</ch>\r\n          <cl>\r\n            <fc>1</fc>\r\n            <ci>\r\n              <idx>1</idx>\r\n              <cs>16021705</cs>\r\n              <cd>257.555</cd>\r\n              <cmd5>73296b72ede668fbfbd94e9f1b7f2606</cmd5>\r\n              <vkey/>\r\n              <keyid>l0384c56ov0.10712.1</keyid>\r\n            </ci>\r\n          </cl>\r\n          <ct>21600</ct>\r\n          <dm>0</dm>\r\n          <drm>0</drm>\r\n          <dsb>0</dsb>\r\n          <enc>0</enc>\r\n          <fclip>1</fclip>\r\n          <fmd5>c96091ef8d559c86cf607381067811b2</fmd5>\r\n          <fn>l0384c56ov0.p712.mp4</fn>    #视频名称\r\n          <fps>23.975</fps>\r\n          <fs>16021707</fs>\r\n          <fst>5</fst>\r\n          <fvkey>7753C60363E91E16D55BA5AC7984DF98675CFA5110B8CF6626FC06F36AE5A6C421F1EFE660057130E8CC31BC383B74E06653ED882A6C40AA61635392ED0B64744777D31AD4B53BB9210F61530448A654EEFE54AB455C880A30C901A451C4989884FD5B8E481831CA2DF8C0A692669D1BE11F9BA861AE5345</fvkey>\r\n          <head>0</head>\r\n          <hevc>0</hevc>\r\n          <iflag>0</iflag>\r\n          <level>0</level>\r\n          <lnk>l0384c56ov0</lnk>\r\n          <logo>1</logo>\r\n          <mst>8</mst>\r\n          <share>1</share>\r\n          <sp>0</sp>\r\n          <st>2</st>\r\n          <tail>0</tail>\r\n          <targetid>0</targetid>\r\n          <td>257.555</td>\r\n          <ti>巨石强森这才叫训练，我们只能叫热身</ti>\r\n          <type>3</type>\r\n          <ul>\r\n            <ui>\r\n              <url>http://ugcdl.video.gtimg.com/flv/102/62/</url>    #视频URL\r\n              <vt>116</vt>\r\n              <dtc>0</dtc>\r\n              <dt>2</dt>\r\n            </ui>\r\n            <ui>\r\n              <url>http://103.18.209.144/vhot2.qqvideo.tc.qq.com/ASSY8IGv4kQAFtK3oC80S_9z6Z-fGV9SHcV8bbIVia_k/</url>    #视频URL\r\n              <vt>200</vt>\r\n              <dtc>0</dtc>\r\n              <dt>2</dt>\r\n            </ui>\r\n            <ui>\r\n              <url>http://ugcbsy.qq.com/flv/102/62/</url>    #视频URL\r\n              <vt>136</vt>\r\n              <dtc>0</dtc>\r\n              <dt>2</dt>\r\n            </ui>\r\n            <ui>\r\n              <url>http://video.dispatch.tc.qq.com/</url>    #视频URL\r\n              <vt>0</vt>\r\n              <dtc>0</dtc>\r\n              <dt>2</dt>\r\n            </ui>\r\n          </ul>\r\n          <vh>480</vh>\r\n          <vid>l0384c56ov0</vid>\r\n          <videotype>0</videotype>\r\n          <vr>0</vr>\r\n          <vst>2</vst>\r\n          <vw>848</vw>\r\n          <wh>1.7666667</wh>\r\n          <wl/>\r\n        </vi>\r\n      </vl>\r\n    </root>\r\n\r\n上面这些参数我基本上都不知道是做什么的， 等我知道了以后会回来补充的\r\n上面的xml中能找到播放的地址以及播放的视频名称\r\n视频的url字段会有多个， 都可以用， 反正我的方法就是遍历一下， 不成功就换下一个， 成功过了就不使用后面的地址了\r\n\r\n再看一下getvkey的发送请求方式以及发送内容\r\n\r\n    Request URL:https://vv.video.qq.com/getvkey\r\n    Request Method:POST\r\n    Status Code:200 \r\n    Remote Address:163.177.89.184:443\r\n    Referrer Policy:no-referrer-when-downgrade\r\n\r\n\r\n    encryptVer:5.4\r\n    vt:116\r\n    format:10712\r\n    charge:0\r\n    guid:9D03BC7FC0846F512484B2C7313E043163A6F811\r\n    filename:l0384c56ov0.p712.1.mp4\r\n    vid:l0384c56ov0\r\n    ran:0.6782327704131603\r\n    ehost:https://v.qq.com/iframe/preview.html?vid=l0384c56ov0\r\n    appver:3.2.19.358\r\n    cKey:IkFHKLigRf8Y7MNGrK034xhHCph62nvl797pKrEpPYriNkpFjRzM6bHRVyRW25lejRCyUMntkvGjR4WbmHgBcSLiovK7pxC8Y4-LtYPIi7Svgj_bDKwohJsKgF9zz3Hzd2FT2GvhQh59uXAzzHB9wRKwjqBAtcAjsWW4SuBdVCPiybCn3N1eCPafOG81B91v4lGgckzsM94-wBEnrT6AkNkX9xKvNGTOE6epnpxYJOkCqLHTQ98iYLdTZBl4Lfu1sqq-VumFVeRKbPO1zjtmG7RHLd70TuwqmE386BhKhSxOf1rlzEq-l-ZsP4moLCX9EuFK68SD0fgY1xfWBAQEBDlW_TE\r\n    platform:70202\r\n    linkver:2\r\n    lnk:l0384c56ov0\r\n    otype:xml\r\n\r\ngetvkey页面的返回值为\r\n\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    \r\n    <root>\r\n      <ip>202.43.148.189</ip>\r\n      <ct>21600</ct>\r\n      <keyid>l0384c56ov0.10712.1</keyid>\r\n      <sr>0</sr>\r\n      <level>0</level>\r\n      <s>o</s>\r\n      <filename>l0384c56ov0.p712.mp4</filename>\r\n      <key>66EE69ED6581F2E9E86A3AFBC96352F7C82A9E2D52AE13DC4FEA4BEAB41883F731D3A831D81F750B689A368ED00BF3A4D22742F15A22EBD8732AFD7F293084AE433D682F85C1530EAB3BAEB3E90F31563474F26B09339A677CF076ED751428FC4F98A0C029CD7553419E4FEA621F21E7E9DCBD5B9E823838</key>\r\n      <br>62206.93</br>\r\n      <sp>0</sp>\r\n      <levelvalid>1</levelvalid>\r\n    </root>\r\n\r\n其中key字段的内容就是拼接视频所使用的vkey\r\n\r\nmp4过滤条件过滤出来的信息为:\r\n\r\n    Request URL:http://211.157.136.18/IXC474c184f0c183c62875c7ec71ee75ec9/flv/102/62/l0384c56ov0.p712.1.mp4?sdtfrom=v1001&type=mp4&vkey=66EE69ED6581F2E9E86A3AFBC96352F7C82A9E2D52AE13DC4FEA4BEAB41883F731D3A831D81F750B689A368ED00BF3A4D22742F15A22EBD8732AFD7F293084AE433D682F85C1530EAB3BAEB3E90F31563474F26B09339A677CF076ED751428FC4F98A0C029CD7553419E4FEA621F21E7E9DCBD5B9E823838&level=0&platform=70202&br=60&fmt=hd&sp=0&guid=9D03BC7FC0846F512484B2C7313E043163A6F811\r\n    Request Method:GET\r\n    Status Code:200 OK\r\n    Remote Address:211.157.136.18:80\r\n    Referrer Policy:no-referrer-when-downgrade\r\n\r\n    sdtfrom:v1001\r\n    type:mp4\r\n    vkey:66EE69ED6581F2E9E86A3AFBC96352F7C82A9E2D52AE13DC4FEA4BEAB41883F731D3A831D81F750B689A368ED00BF3A4D22742F15A22EBD8732AFD7F293084AE433D682F85C1530EAB3BAEB3E90F31563474F26B09339A677CF076ED751428FC4F98A0C029CD7553419E4FEA621F21E7E9DCBD5B9E823838\r\n    level:0\r\n    platform:70202\r\n    br:60\r\n    fmt:hd\r\n    sp:0\r\n    guid:9D03BC7FC0846F512484B2C7313E043163A6F811\r\n\r\n可以看到视频的真实地址以及get请求的参数内容\r\n\r\n我们看到视频真实地址:\r\n[http://211.157.136.18/IXC474c184f0c183c62875c7ec71ee75ec9/flv/102/62/l0384c56ov0.p712.1.mp4?sdtfrom=v1001&type=mp4&vkey=66EE69ED6581F2E9E86A3AFBC96352F7C82A9E2D52AE13DC4FEA4BEAB41883F731D3A831D81F750B689A368ED00BF3A4D22742F15A22EBD8732AFD7F293084AE433D682F85C1530EAB3BAEB3E90F31563474F26B09339A677CF076ED751428FC4F98A0C029CD7553419E4FEA621F21E7E9DCBD5B9E823838&level=0&platform=70202&br=60&fmt=hd&sp=0&guid=9D03BC7FC0846F512484B2C7313E043163A6F811][5]\r\n\r\n经过反复测试， 最终发现， 最精简的可以下载视频的地址为:\r\n[http://211.157.136.18/IXC474c184f0c183c62875c7ec71ee75ec9/flv/102/62/l0384c56ov0.p712.1.mp4?vkey=66EE69ED6581F2E9E86A3AFBC96352F7C82A9E2D52AE13DC4FEA4BEAB41883F731D3A831D81F750B689A368ED00BF3A4D22742F15A22EBD8732AFD7F293084AE433D682F85C1530EAB3BAEB3E90F31563474F26B09339A677CF076ED751428FC4F98A0C029CD7553419E4FEA621F21E7E9DCBD5B9E823838][6]\r\n\r\n可以看出下载视频所需要的三个参数:\r\n视频地址: getvinfo页面给出\r\n视频文件名: getvinfo页面给出\r\n视频验证vkey: getvkey页面给出\r\n\r\n知道了这几个东西， 就可以自己写爬虫来获取腾讯视频的原始地址了\r\n\r\n看到有的博客说最新的腾讯视频没有getvkey页面了， 我同样也测试过， 区别就是使用的vkey在getinfo页面可以获取到， 为fvkey字段， 大同小异， 基本思路都是一样的\r\n\r\n注意: 接下来说个坑\r\n腾讯视频的getvinfo以及getvkey页面实在是太魔幻了， 我用postman发送同样的数据， 有时候能成功有时候不能成功， 至于原因， 我不知道， 希望有大神可以帮忙解答一下\r\n\r\n爬坑方案: \r\n提示: Windows播放视频使用的是adobe flash player播放器， mac上使用的是html5播放器， 如果你用mac来做爬虫会有意外惊喜， 至少我是这么成功的\r\n\r\n如果没有mac怎么办， 不要绝望， 要记得， 手机端也是用的html5播放器播放视频的~~~\r\n\r\n\r\n  [1]: http://www.rootblack.com/tools_page/get_tenc_movie_download_url.php\r\n  [2]: https://v.qq.com/iframe/preview.html?vid=l0384c56ov0\r\n  [3]: http://www.rootblack.com/usr/uploads/2017/12/2601275577.png\r\n  [4]: http://www.rootblack.com/usr/uploads/2017/12/134803373.png\r\n  [5]: http://211.157.136.18/IXC474c184f0c183c62875c7ec71ee75ec9/flv/102/62/l0384c56ov0.p712.1.mp4?sdtfrom=v1001&type=mp4&vkey=66EE69ED6581F2E9E86A3AFBC96352F7C82A9E2D52AE13DC4FEA4BEAB41883F731D3A831D81F750B689A368ED00BF3A4D22742F15A22EBD8732AFD7F293084AE433D682F85C1530EAB3BAEB3E90F31563474F26B09339A677CF076ED751428FC4F98A0C029CD7553419E4FEA621F21E7E9DCBD5B9E823838&level=0&platform=70202&br=60&fmt=hd&sp=0&guid=9D03BC7FC0846F512484B2C7313E043163A6F811\r\n  [6]: http://211.157.136.18/IXC474c184f0c183c62875c7ec71ee75ec9/flv/102/62/l0384c56ov0.p712.1.mp4?vkey=66EE69ED6581F2E9E86A3AFBC96352F7C82A9E2D52AE13DC4FEA4BEAB41883F731D3A831D81F750B689A368ED00BF3A4D22742F15A22EBD8732AFD7F293084AE433D682F85C1530EAB3BAEB3E90F31563474F26B09339A677CF076ED751428FC4F98A0C029CD7553419E4FEA621F21E7E9DCBD5B9E823838',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(95,'Python json.dumps报错解决方案','95',1513822812,1513822812,'<!--markdown-->在使用Django做Api的时候， 经常返回一个json格式的数据， 一直那么用都没有问题， 直到有一天， 我从库里查询出来的字段有datetime.datetime类型的字段， 然后就报错了， 在网上查了一下解决方案\r\n\r\n\r\n<!--more-->\r\n\r\n据说贴源码会显得很高大上\r\n\r\n    def dumps(obj, skipkeys=False, ensure_ascii=True, check_circular=True,\r\n            allow_nan=True, cls=None, indent=None, separators=None,\r\n            encoding=\'utf-8\', default=None, sort_keys=False, **kw):\r\n        \"\"\"Serialize ``obj`` to a JSON formatted ``str``.\r\n    \r\n        If ``skipkeys`` is true then ``dict`` keys that are not basic types\r\n        (``str``, ``unicode``, ``int``, ``long``, ``float``, ``bool``, ``None``)\r\n        will be skipped instead of raising a ``TypeError``.\r\n    \r\n    \r\n        If ``ensure_ascii`` is false, all non-ASCII characters are not escaped, and\r\n        the return value may be a ``unicode`` instance. See ``dump`` for details.\r\n    \r\n        If ``check_circular`` is false, then the circular reference check\r\n        for container types will be skipped and a circular reference will\r\n        result in an ``OverflowError`` (or worse).\r\n    \r\n        If ``allow_nan`` is false, then it will be a ``ValueError`` to\r\n        serialize out of range ``float`` values (``nan``, ``inf``, ``-inf``) in\r\n        strict compliance of the JSON specification, instead of using the\r\n        JavaScript equivalents (``NaN``, ``Infinity``, ``-Infinity``).\r\n    \r\n        If ``indent`` is a non-negative integer, then JSON array elements and\r\n        object members will be pretty-printed with that indent level. An indent\r\n        level of 0 will only insert newlines. ``None`` is the most compact\r\n        representation.  Since the default item separator is ``\', \'``,  the\r\n        output might include trailing whitespace when ``indent`` is specified.\r\n        You can use ``separators=(\',\', \': \')`` to avoid this.\r\n    \r\n        If ``separators`` is an ``(item_separator, dict_separator)`` tuple\r\n        then it will be used instead of the default ``(\', \', \': \')`` separators.\r\n        ``(\',\', \':\')`` is the most compact JSON representation.\r\n    \r\n        ``encoding`` is the character encoding for str instances, default is UTF-8.\r\n    \r\n        ``default(obj)`` is a function that should return a serializable version\r\n        of obj or raise TypeError. The default simply raises TypeError.\r\n    \r\n        If *sort_keys* is true (default: ``False``), then the output of\r\n        dictionaries will be sorted by key.\r\n    \r\n        To use a custom ``JSONEncoder`` subclass (e.g. one that overrides the\r\n        ``.default()`` method to serialize additional types), specify it with\r\n        the ``cls`` kwarg; otherwise ``JSONEncoder`` is used.\r\n    \r\n        \"\"\"\r\n        # cached encoder\r\n        if (not skipkeys and ensure_ascii and\r\n            check_circular and allow_nan and\r\n            cls is None and indent is None and separators is None and\r\n            encoding == \'utf-8\' and default is None and not sort_keys and not kw):\r\n            return _default_encoder.encode(obj)\r\n        if cls is None:\r\n            cls = JSONEncoder\r\n        return cls(\r\n            skipkeys=skipkeys, ensure_ascii=ensure_ascii,\r\n            check_circular=check_circular, allow_nan=allow_nan, indent=indent,\r\n            separators=separators, encoding=encoding, default=default,\r\n            sort_keys=sort_keys, **kw).encode(obj)\r\n    \r\n    \r\n    _default_decoder = JSONDecoder(encoding=None, object_hook=None,\r\n                                   object_pairs_hook=None)\r\n\r\n据说这段源码能看出来我们可以自己写一个JSONEncoder的类来替换默认的cls然后就可以修复dumps datetime.datetime类型数据的错误了\r\n\r\n接下来上解决方案代码:\r\n\r\n    class JsonCustomEncoder(json.JSONEncoder):\r\n    \r\n        def default(self, o):\r\n            if isinstance(o, datetime.datetime):\r\n                return o.strftime(\"%Y-%m-%d %H-%M-%S\")\r\n            elif isinstance(o, datetime.date):\r\n                return o.strftime(\"%Y-%m-%d\")\r\n            else:\r\n                return json.JSONEncoder.default(self, o)\r\n\r\n\r\n亲测这样可以用了， 然后以后如果再报别的错了， 就在default里面多加几个elif就好了， So Easy~~~',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(96,'Django LOG配置','96',1513823201,1513823201,'<!--markdown-->LOG是个好东西， 可以随时看到自己程序是否炸了， 或者哪里异常了， 所以不论什么项目当然都要配置LOG了\r\n下面来写一下Django的LOG配置\r\n\r\n\r\n<!--more-->\r\n\r\n在Settings.py里面加入如下代码:\r\n\r\n    LOGGING = {\r\n        \'version\': 1,\r\n        \'disable_existing_loggers\': False,\r\n        \'formatters\': {\r\n            \'verbose\': {\r\n                \'format\': \"[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s\",\r\n                \'datefmt\': \"%d/%b/%Y %H:%M:%S\"\r\n            },\r\n            \'simple\': {\r\n                \'format\': \'%(levelname)s %(message)s\'\r\n            },\r\n        },\r\n        \'handlers\': {\r\n            \'file\': {\r\n                \'level\': LOG_TYPE,\r\n                \'class\': \'logging.handlers.TimedRotatingFileHandler\',\r\n                \'filename\': os.getcwd() + \'/log/current.log\',\r\n                \'when\': \'D\',  # this specifies the interval\r\n                \'interval\': 1,  # defaults to 1, only necessary for other values\r\n                \'backupCount\': 10,  # how many backup file to keep, 10 days\r\n                \'formatter\': \'verbose\',\r\n            },\r\n            \'console\': {\r\n                \'level\': LOG_TYPE,\r\n                \'class\': \'logging.StreamHandler\',\r\n                \'stream\': sys.stdout\r\n            },\r\n    \r\n        },\r\n        \'loggers\': {\r\n            \'django\': {\r\n                \'handlers\': [\'console\', \'file\'],\r\n                \'level\': os.getenv(\'DJANGO_LOG_LEVEL\', LOG_TYPE),\r\n            },\r\n            \'\': {\r\n                \'handlers\': [\'console\', \'file\'],\r\n                \'level\': os.getenv(\'DJANGO_LOG_LEVEL\', LOG_TYPE),\r\n            }\r\n        },\r\n    }\r\n\r\n\r\n然后在需要使用的地方初始化一个LOG就好了， 初始化方式如下:\r\n\r\n    LOG = logging.getLogger(__name__)\r\n\r\nDjango中的LOG总觉得跟Java里面的不大一样\r\n简单说一下:\r\nLOG.info() # 同java log4j打印普通日志\r\nLOG.debug() # 打印debug日志\r\nLOG.error() # 打印错误信息， 但是打印出来的错误信息真的只有错误信息， 连出错行数都没有， 如果想要看具体哪里出错的详细信息， 请用下面的\r\nLOG.exception() # 打印详细错误信息， 打印出来的信息会跟没有try的时候输出的结果是一样的\r\n\r\n以上~ 应该不会再有问题了',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(97,'Django 增加自带User类中的字段','97',1513823924,1513823924,'<!--markdown-->最近在用Django做项目， 一般网页项目当然都有用户注册以及登录的功能， 但是Django自带的User类只有那么几个信息， 完全不能满足我们的要求， 所以下面贴一下解决方案\r\n\r\n\r\n<!--more-->\r\n\r\n方案1: \r\n增加一个UserInfo表， 有个user字段， 外键为Django自带的User类， 这样就可以关联并查询了\r\n\r\n方案1太Low， 怎么能显示出我们Geek的本质呢， 作为Geek当然要用那种高端大气上档次， 自己都看不懂的代码来实现\r\n下面请看方案2:\r\n\r\n在Models.py文件中创建一个User类， 继承AbstractUser类， 然后写多余的字段就好了\r\n\r\n    class User(AbstractUser):\r\n        agency = models.ForeignKey(AgencyInfo, null=True)  # 用户所属机构\r\n        telephone = models.CharField(max_length=30, blank=True)  # 手机\r\n        phone = models.CharField(default=0, max_length=30, blank=True)  # 座机\r\n\r\nAbstractUser类包含了User类几乎所有的功能， 所以不用担心使用上的问题， 除了无法在Admin中手动给用户添加用户组以及权限了， 不知道是我的写法错了还是怎么回事， 如果有大神有解决方案， 欢迎告诉我\r\n\r\n接下来在Settings.py文件中添加如下代码\r\n\r\n    AUTH_USER_MODEL = \'\"Your App Name\".User\'\r\n\r\n当然， 如果想在后台admin里面看到的话， 还是要在admin里面注册一下你的这个类的\r\n不过要注意， 引用的时候千万不要再引用\r\n\r\n    from django.contrib.auth.models import User\r\n\r\n了， 因为你已经把它替换掉了， 引用的时候请用\r\n\r\n    from \"Your App Name\".models import User\r\n\r\n这样基本上就没问题了\r\n\r\n提示: \r\n修改User类以后， 一定要删库， 并且删除migrations文件夹下除了__init__.py文件以外的所有文件， 因为修改User需要重新建库， 只是单纯的修改库是会报错的\r\n\r\n如果在运行过程中看到如下错误\r\n\r\n    AttributeError: Manager isn\'t available; \'auth.User\' has been swapped for \'\"Your App Name\".User\'\r\n\r\n那就跟着提示追到报错的文件吧， 你肯定是引用了Django自带的User， 替换成你新创建的User就可以解决了',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(99,'html多选下拉菜单','99',1514252160,1514259216,'<!--markdown-->由于html中没有自带的多选下拉菜单， 所以只能自己找一个插件， 在简单看了几个demo之后， 发现boostrap-select这个插件是最好用的一个， [官网][1]\r\n\r\n\r\n<!--more-->\r\n\r\n按照官网的提示， 首先， 需要引用自带的js以及css文件\r\n\r\n    <!-- Latest compiled and minified CSS -->\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/css/bootstrap-select.min.css\">\r\n    \r\n    <!-- Latest compiled and minified JavaScript -->\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/js/bootstrap-select.min.js\"></script>\r\n    \r\n    <!-- (Optional) Latest compiled and minified JavaScript translation files -->\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/js/i18n/defaults-*.min.js\"></script>\r\n\r\n\r\n使用方法:\r\n\r\n    <select class=\"selectpicker\" id=\"selecter\">\r\n      <option>Mustard</option>\r\n      <option>Ketchup</option>\r\n      <option>Relish</option>\r\n    </select>\r\n\r\n获取值的方法:\r\n\r\n    var selectedValue = $(\"#selecter\").val();\r\n\r\n设置初始值的方法(如果在layer中使用， 必须要set一个值， 不然控件无法显示， 如果不想set一个初始化的值的话， 可以set一个不存在的值， 也可以让控件显示出来):\r\n\r\n    $(\"#selectCity\").selectpicker(\'val\', \'Ketchup\');\r\n\r\n设置初始值一定要保证设置的值在选择内容中, 如果想初始化多个值， 将Ketchup替换成一个数组就可以了\r\n\r\n如果是使用动态加载的方法来添加数据源， 添加之后需要刷新一下才能显示出来\r\n\r\n    $(\"#selectCity\").selectpicker(\'refresh\');\r\n\r\n按照官网的方法， 把所有的东西都已经配置好了， 结果发现显示效果不对， 找了半天资料， 最后在官网看到这么一句话:\r\n\r\n> Requires jQuery v1.8.0+, Bootstrap’s dropdown.js component, and\r\n> Bootstrap\'s CSS. If you\'re not already using Bootstrap in your\r\n> project, a precompiled version of the minimum requirements can be\r\n> downloaded [here][2].\r\n\r\n然后又去下了bootstrap并引用了js以及css文件就好了:\r\n\r\n    <link rel=\"stylesheet\" href=\"{% static \'bootstrap/css/bootstrap.css\' %}\">\r\n    <script src=\"{% static \'bootstrap/js/bootstrap.js\' %}\"></script>\r\n\r\n祝大家使用愉快\r\n  [1]: http://silviomoreto.github.io/bootstrap-select/\r\n  [2]: https://getbootstrap.com/docs/3.3/customize/',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(100,'js获取url get参数的函数','100',1514252342,1514252342,'<!--markdown-->找到了一个js获取url get参数的函数， 虽然我看不懂， 但是， 还是挺好用的， 贴上来备注一下\r\n\r\n    function GetQueryString(name) {\r\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\r\n        var r = window.location.search.substr(1).match(reg);\r\n        if (r != null) return unescape(r[2]);\r\n        return null;\r\n    }',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(101,'使用layer用作页面弹出框','101',1514253540,1514253631,'<!--markdown-->layer是layui中的一个弹出框插件， 可以脱离layui单独使用， 据说使用的人还是很多的， 使用方法请参照[官网][1]\r\n由于官网的介绍很详细， 所以我就不在博客中写使用方法了\r\n下面简单说一下我在使用中遇到的一个坑以及解决方案:\r\n\r\n\r\n<!--more-->\r\n\r\nlayer的弹出参数type有五种, 其中页面层和iframe层是可以直接传递url给content来显示弹出页面， 但是我没有使用过， 原因是我不知道如何在使用完成关闭页面， 当然， 因为信息框的方式足够我用了， 所以我也没有调研关闭方法， 等哪天需要用到的时候再调研， 然后再更新吧\r\n\r\nlayer弹出type还有加载层以及tips层， 还没有测过， 也没有用过， 也不知道做什么用的， 等我到需要的时候使用完了再回来更新吧\r\n\r\n好了， 现在就剩下我唯一一个用过的类型了: 信息框类型\r\n\r\n信息框类型的content是传递一个html， 但是由于我要弹出的页面内的数据是动态更新的， 所以我没有办法单独写在一个页面上并引用html传递过去， 所以我都是通过拼接字符串的方式来拼接一个完整的html并且传递给content， 然后Bug就出现了， 就是徒手拼接的html里面有好多布局都不能在弹出窗口内使用， 原因未知， 而且拼接的html也非常乱， 不好做修改， 查了一些资料， 找到了两个方法来解决这个问题:\r\n\r\n方法1: \r\n使用type: 2也就是iframe层， 然后单独写一个页面， 通过get方式传参， 在访问页面的时候通过js动态添加数据\r\n其中的坑为: \r\n1. 我不知道如何添加一个button按钮来关闭这个页面\r\n2. get方式传参不能传特别长的参数， 所以如果我更新的数据特别多的话， 这个方式就不能使用了\r\n\r\n方法2: \r\n使用type: 0, 使用ajax访问我的url，然后将返回值类型设置为html类型， 并赋值给layer的content属性， 由于是ajax直接访问， 所以get， post都可以， 而且已经访问到后台页面了， 我可以直接操作数据库或者直接使用django的模板方式布局， 所以灵活性非常大， 而且使用的是信息框做弹出， 所以layer的确认按钮， 取消按钮都可以使用， 暂时没有发现缺点\r\n下面放出简略的代码来作为参照:\r\n\r\n    $.ajax({\r\n        type: \'GET\',\r\n        url: \'/test\',//发送请求\r\n        data: {param1: p1, param2: p2},\r\n        dataType: \"html\",\r\n        success: function (result) {\r\n            var htmlCont = result;//返回的结果页面\r\n            layer.open({\r\n                type: 0,//弹出框类型\r\n                title: \'传播层级用户详情\',\r\n                shadeClose: false, //点击遮罩关闭层\r\n                area: [\'60%\', \'90%\'],\r\n                shift: 1,\r\n                content: htmlCont,//将结果页面放入layer弹出层中\r\n                success: function (layero, index) {\r\n    \r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n希望大家使用愉快\r\n  [1]: http://www.layui.com/doc/modules/layer.html',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(102,'Django将数据从sqlite3迁移到mysql','102',1514977370,1514977370,'<!--markdown-->1. 在mysql中创建django项目需要用的数据库\r\n2. 使用python manage.py dumpdata --format=json > bak.json命令将sqlite3中的数据放到json中\r\n3. 将django项目连接到mysql库上, 删除migrations文件夹下除了__init__.py文件以外的所有文件\r\n4. 使用python manage.py makemigrations创建修改\r\n5. 使用python manage.py migrate创建表到mysql\r\n6. 删除mysql中自带表中所有内容\r\n7. 使用python manage.py loaddata bak.json将导出的数据导入到mysql库中',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(103,'离线安装Python以及pip','103',1515739140,1515745584,'<!--markdown-->Python [官网][1]\r\n\r\n下载最新版本并解压\r\n\r\n在Python文件夹中使用\r\n\r\n    ./configure –prefix=/usr/local/python2.7\r\n\r\n\r\n<!--more-->\r\n\r\n\r\n命令配置安装路径, 然后使用\r\n\r\n    make && make install\r\n\r\n命令编译并安装\r\n\r\n在~/.bash_profile中PATH变量中添加Python的路径\r\n\r\n    PATH=$PATH:$HOME/bin:/home/jr/install/python2.7/bin\r\n\r\n最后使用\r\n\r\n    source ~/.bash_profile\r\n\r\n命令来使bash_profile文件生效\r\n\r\n打开setuptools[官网][2], 下载setuptools最新安装包, 然后解压并使用\r\n\r\n    python setup.py install \r\n\r\n命令来安装setuptools\r\n\r\n打开pip[官网][3], 下载pip最新安装包, 然后解压并使用\r\n\r\n    python setup.py install \r\n\r\n命令来安装pip\r\n\r\n  [1]: https://www.python.org/downloads/source/\r\n  [2]: https://pypi.python.org/pypi/setuptools\r\n  [3]: https://pypi.python.org/pypi/pip',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(104,'导出电脑中Python的依赖包','104',1515739320,1515739601,'<!--markdown-->使用\r\n\r\n    pip freeze > source.txt\r\n\r\n命令导出使用的依赖的列表\r\n\r\n\r\n<!--more-->\r\n\r\n\r\n使用\r\n\r\n    pip install -d python-packages/ -r source.txt\r\n\r\n命令导出source.txt中的依赖关系到python-packages文件夹内\r\n\r\n在目标机器中进入python， 使用命令\r\n\r\n    >>import pip; print(pip.pep425tags.get_supported())\r\n    [(\'cp27\', \'none\', \'win32\'), (\'py2\', \'none\', \'win32\'), (\'cp27\', \'none\', \'any\'), (\'cp2\', \'none\', \'any\'), (\'cp26\', \'none\', \'any\'), (\'cp25\', \'none\', \'any\'), (\'cp24\', \'none\', \'any\'), (\'cp23\', \'none\', \'any\'), (\'cp22\', \'none\', \'any\'), (\'cp21\', \'none\', \'any\'), (\'cp20\', \'none\', \'any\'), (\'py27\', \'none\', \'any\'), (\'py2\', \'none\', \'any\'), (\'py26\', \'none\', \'any\'), (\'py25\', \'none\', \'any\'), (\'py24\', \'none\', \'any\'), (\'py23\', \'none\', \'any\'), (\'py22\', \'none\', \'any\'), (\'py21\', \'none\', \'any\'), (\'py20\', \'none\', \'any\')]\r\n\r\n查看pip支持的依赖后缀， 并将你导出的python-packages包中依赖名称不对的修改为上面显示的内容\r\n最后使用\r\n\r\n    pip install *\r\n\r\n命令来安装所有的依赖',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(106,'离线安装Pillow','106',1515740506,1515740506,'<!--markdown-->打开Pillow [官网][1], 下载并解压\r\n打开zlib [下载页面][2], 使用\r\n\r\n    sudo rpm -ivh --nodeps zlib.rpm\r\n\r\n命令安装zlib\r\n\r\n打开libjpeg-turbo-devel [下载页面][3], 使用\r\n\r\n    sudo rpm -ivh --nodeps zlib.rpm\r\n\r\n命令安装libjpeg\r\n\r\n最后使用\r\n\r\n    python setup.py install\r\n\r\n命令安装Pillow\r\n\r\n\r\n  [1]: https://pypi.python.org/pypi/Pillow\r\n  [2]: https://rpmfind.net/linux/rpm2html/search.php?query=zlib-devel\r\n  [3]: https://rpmfind.net/linux/rpm2html/search.php?query=libjpeg-turbo-devel',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(107,'linux 安装mysql','107',1516253460,1516256037,'<!--markdown-->下载MySQL-server-5.1.73-1.glibc23.x86_64.rpm\r\n以及MySQL-client-5.1.73-1.glibc23.x86_64.rpm\r\n两个包， 然后rpm -ivh 命令安装， 如果安装报错， 需要在安装命令之后加上--nodeps --force\r\n\r\n\r\n<!--more-->\r\n\r\n使用\r\n\r\n    mysql -uroot\r\n\r\n命令进入mysql命令行， 然后使用\r\n\r\n    set password for root@localhost = password(\'root\');\r\n\r\n命令给root用户一个初始化密码\r\n使用\r\n\r\n    CREATE USER \'username\'@\'localhost\' IDENTIFIED BY \'password\';\r\n\r\n命令创建本地访问管理员\r\n使用\r\n\r\n    GRANT ALL ON tablename.* TO \'username\'@\'localhost\';\r\n\r\n命令将某个数据库的所有权限赋给此用户\r\n使用\r\n\r\n> mysql -h ip -P port -uusername -ppassword\r\n\r\n命令即可远程登录mysql\r\n\r\n使用\r\n\r\n    SET collation_connection = \'utf8_general_ci\';\r\n    ALTER DATABASE your_database_name CHARACTER SET utf8 COLLATE utf8_general_ci;\r\n    ALTER TABLE your_table_name CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;\r\n\r\n命令修改数据库编码\r\n',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(108,'MySQL双主热备份','108',1516273260,1517972139,'<!--markdown-->分别在两个节点创建备份用户并给备份用户赋予只有从另外一个节点能登录的SLAVE权限\r\n\r\n    CREATE USER \'backup\'@\'other ip\' IDENTIFIED BY \'backup\';\r\n    GRANT REPLICATION SLAVE ON *.* TO \'backup\'@\'other ip\';\r\n\r\n\r\n<!--more-->\r\n\r\n\r\n分别修改两个节点中/etc/mysql.cnf文件， 增加以下列\r\n\r\n    [mysqld]\r\n    datadir=/var/lib/mysql\r\n    socket=/var/lib/mysql/mysql.sock\r\n    user=mysql\r\n    # Disabling symbolic-links is recommended to prevent assorted security risks\r\n    symbolic-links=0\r\n    character_set_server=utf8\r\n    init_connect=\'SET NAMES utf8\'\r\n    \r\n    [mysql]\r\n    default-character-set=utf8\r\n    \r\n    [mysqld_safe]\r\n    log-error=/var/log/mysqld.log\r\n    pid-file=/var/run/mysqld/mysqld.pid\r\n    log-bin=mysql-bin  //开启master\r\n    server-id=1  //设置server-id， 两个节点不能重复\r\n    \r\n    binlog-do-db=my_db_1  //需要备份的数据库1 与忽略备份的数据库只存在一个即可\r\n    binlog-do-db=my_db_2  //需要备份的数据库1\r\n    binlog-ignore-db=my_db_1  //忽略备份的数据库1\r\n    binlog-ignore-db=my_db_2  //忽略备份的数据库2\r\n    \r\n    replicate-go-db=my_db_1  //备份的数据库1 与忽略备份的数据库只存在一个即可 但要与上面的配置对应\r\n    replicate-go-db=my_db_2  //备份的数据库2\r\n    replicate-ignore-db=my_db_1  //忽略备份的数据库1\r\n    replicate-ignore-db=my_db_2  //忽略备份的数据库2\r\n    relay_log=mysqld-relay-bin  //中继日志的名字\r\n    log-slave-updates=ON  //中继日志执行后， 这些变化计入自己的binarylog中\r\n\r\n将A节点当成master， 在MySQL 命令行中执行命令\r\n\r\n    show master status\r\n\r\n\r\n将B节点当成slave， 在MySQL 命令行中执行\r\n\r\n    CHANGE MASTER TO\r\n    MASTER_HOST=\'ip\',  //主节点的ip\r\n    MASTER_USER=\'backup\',  //用户名\r\n    MASTER_PASSWORD=\'backup\',  //密码\r\n    MASTER_LOG_FILE=\'mysql-bin.000002\',  //show master status命令结果中File的值\r\n    MASTER_LOG_POS=106;  //show master status命令结果中Position值\r\n\r\n命令来配置slave\r\n\r\n交换A，B节点， 重复上面的操作\r\n重启两台机器的MySQL服务， 双主节点互备完成\r\n在两台机器中执行\r\n\r\n    slave status\r\n\r\n可以查看slave是否成功启动\r\n',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(109,'shadowsocks config','109',1516864407,1516864407,'<!--markdown--><!--more-->\r\n\r\n\r\n    {\r\n      \"server\":\"0.0.0.0\",\r\n      \"local_address\": \"127.0.0.1\",\r\n      \"local_port\":1080,\r\n      \"server_port\":8989,\r\n      \"password\":\"\",\r\n      \"timeout\":300,\r\n      \"method\":\"aes-256-cfb\",\r\n      \"fast_open\": false\r\n    }\r\n    \r\n    #!/bin/sh\r\n    echo `ssserver -c /etc/shadowsocks.json -d $1`',0,1,NULL,'post','publish',NULL,0,'1','0','1',0),(110,'使用docker搭建服务器运行Blog','110',1521528600,1521529632,'<!--markdown-->[安装docker][1]\r\n\r\n\r\n  [1]: https://docs.docker.com/install/\r\n\r\n\r\n<!--more-->\r\n\r\n安装docker成功之后, 使用docker search命令查找需要使用的环境\r\n例如我要使用lnmp的环境, 我就使用命令:\r\n\r\n    docker search lnmp\r\n    \r\n查找到镜像:\r\n\r\n    NAME                              DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED\r\n    imagine10255/centos6-lnmp-php56   centos6-lnmp-php56                              40                                      [OK]\r\n    twang2218/lnmp-nginx              这是 LNMP 示例中的 nginx 镜像                           9                                       [OK]\r\n    maxwhale/ubuntu14-lnmp1.2         Ubuntu14.04 lnmp1.2                             6                                       [OK]\r\n    winstonpro/lnmp                   based on ubuntu 14.04                           6                                       \r\n    domainer/centos-lnmp                                                              5                                       [OK]\r\n    dzer/lnmp                         lnmp环境                                          4                                       \r\n    maxwhale/lnmp-docker              LNMP Docker                                     4                                       [OK]\r\n    duckll/lnmp                       webservice                                      3                                       [OK]\r\n    evagle/lnmp                       ubuntu14.04 + nginx + mysql + php + redis       3                                       \r\n    idiswy/lnmp                       Ubuntu 16.04 + nginx 1.8.x + php7 + MySQL 5.…   3                                       \r\n    inteye/lnmp                       LNMP1.2 (Linux, Nginx, Mysql, PHP). For deta…   1                                       \r\n    erguotou/docker-centos6-lnmp      lnmp environment in centos6                     1                                       [OK]\r\n    farwish/centos7-lnmp              Lnmp environment based centos7.                 1                                       \r\n    twang2218/lnmp-php                这是 LNMP Docker 容器互联示例的 php 镜像                   1                                       [OK]\r\n    gatherchou/docker-lnmp            docker-lnmp                                     1                                       [OK]\r\n    sunke/lnmp                        LNMP                                            1                                       \r\n    fbraz3/lnmp                       An easy-to-use LNMP/LEMP image, with Ubuntu …   1                                       \r\n    zhaojianhui/lnmp                  LNMP环境                                          1                                       \r\n    sixian67/lnmp                     this is my lnmp                                 0                                       \r\n    zshtom/lnmp                       lnmp in centos 7                                0                                       \r\n    huangguoji/lnmp                   lnmp.org的包                                      0                                       \r\n    c21xdx/lnmp13_cen6                php5.4                                          0                                       [OK]\r\n    isntall/lnmp                      php fpm + extensions                            0                                       [OK]\r\n    jamesatwork/docker-lnmpwp         A docker of LNMP & WordPress                    0                                       [OK]\r\n    twang2218/lnmp-mysql              This is the MySQL image of the LNMP docker c…   0                                       [OK]\r\n\r\n查找到想要使用的环境之后, 将对应的镜像下载下来, 例如我要使用的是imagine10255/centos6-lnmp-php56\r\n则使用命令\r\n\r\n    docker pull imagine10255/centos6-lnmp-php56\r\n\r\n下载之后可以通过命令:\r\n\r\n    docker images\r\n\r\n    REPOSITORY                        TAG                 IMAGE ID            CREATED             SIZE\r\n    black/blog                        latest              bab6243eff0d        16 hours ago        1.46GB\r\n    imagine10255/centos6-lnmp-php56   latest              ecc74d703eca        16 months ago       1.31GB\r\n\r\n来查看你所下载下来的镜像, 找到你刚刚下载下来的镜像的image id, 然后使用命令\r\n\r\n    docker run -p 81:80 -itd \"image id\"\r\n\r\n来运行对应的docker镜像, 并将docker中的80端口映射到本地的81端口\r\n\r\n使用命令\r\n\r\n    docker ps\r\n\r\n    CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                                  NAMES\r\n    8bd52bbe0401        bab6243eff0d        \"bash\"              About an hour ago   Up About an hour    22/tcp, 8080/tcp, 0.0.0.0:80->80/tcp   elastic_curie\r\n\r\n来查看已经运行的docker镜像, 找到刚刚运行的镜像对应的container id, 使用命令\r\n\r\n    docker exec -it \"container id\" bash\r\n\r\n来进入到docker镜像中, 然后对docker镜像进行修改来让docker能够成功运行你的blog\r\n',0,1,NULL,'post','publish',NULL,0,'1','0','1',0);
/*!40000 ALTER TABLE `typecho_contents` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `typecho_fields`
--

DROP TABLE IF EXISTS `typecho_fields`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `typecho_fields` (
  `cid` int(10) unsigned NOT NULL,
  `name` varchar(200) NOT NULL,
  `type` varchar(8) DEFAULT 'str',
  `str_value` text,
  `int_value` int(10) DEFAULT '0',
  `float_value` float DEFAULT '0',
  PRIMARY KEY (`cid`,`name`),
  KEY `int_value` (`int_value`),
  KEY `float_value` (`float_value`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `typecho_fields`
--

LOCK TABLES `typecho_fields` WRITE;
/*!40000 ALTER TABLE `typecho_fields` DISABLE KEYS */;
/*!40000 ALTER TABLE `typecho_fields` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `typecho_links`
--

DROP TABLE IF EXISTS `typecho_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `typecho_links` (
  `lid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'links表主键',
  `name` varchar(200) DEFAULT NULL COMMENT 'links名称',
  `url` varchar(200) DEFAULT NULL COMMENT 'links网址',
  `sort` varchar(200) DEFAULT NULL COMMENT 'links分类',
  `image` varchar(200) DEFAULT NULL COMMENT 'links图片',
  `description` varchar(200) DEFAULT NULL COMMENT 'links描述',
  `user` varchar(200) DEFAULT NULL COMMENT '自定义',
  `order` int(10) unsigned DEFAULT '0' COMMENT 'links排序',
  PRIMARY KEY (`lid`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `typecho_links`
--

LOCK TABLES `typecho_links` WRITE;
/*!40000 ALTER TABLE `typecho_links` DISABLE KEYS */;
INSERT INTO `typecho_links` VALUES (3,'傻逼滥情','http://www.nulll.me',NULL,NULL,NULL,NULL,2),(2,'流氓','http://www.06m.me',NULL,NULL,NULL,NULL,1),(4,'丑b的小乔','http://www.0ysec.com/',NULL,NULL,NULL,NULL,3),(5,'Low B','http://www.codemokey.org/',NULL,NULL,NULL,NULL,4),(6,'ivan','http://www.cnivan.com/',NULL,NULL,NULL,NULL,5),(7,'it瘾','http://itindex.net/',NULL,NULL,NULL,NULL,6),(8,'fighter','http://fighterhit.ml/',NULL,NULL,NULL,NULL,7);
/*!40000 ALTER TABLE `typecho_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `typecho_metas`
--

DROP TABLE IF EXISTS `typecho_metas`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `typecho_metas` (
  `mid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) DEFAULT NULL,
  `slug` varchar(200) DEFAULT NULL,
  `type` varchar(32) NOT NULL,
  `description` varchar(200) DEFAULT NULL,
  `count` int(10) unsigned DEFAULT '0',
  `order` int(10) unsigned DEFAULT '0',
  `parent` int(10) unsigned DEFAULT '0',
  PRIMARY KEY (`mid`),
  KEY `slug` (`slug`)
) ENGINE=MyISAM AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `typecho_metas`
--

LOCK TABLES `typecho_metas` WRITE;
/*!40000 ALTER TABLE `typecho_metas` DISABLE KEYS */;
INSERT INTO `typecho_metas` VALUES (1,'默认分类','default','category','只是一个默认分类',36,1,0),(2,'Qt','Qt','category',NULL,2,2,0),(3,'Software','Software','category',NULL,1,3,0),(4,'Linux','Linux','category',NULL,3,4,0),(5,'python','python','category',NULL,9,5,0),(6,'php','php','category',NULL,3,6,0),(7,'Algorithm','Algorithm','category',NULL,0,7,0),(8,'KID','KID','category',NULL,0,8,0),(9,'kid&Algorithm','kid-Algorithm','category','KID的Data structure & Algorithm学习笔记',0,1,8),(10,'C & C++','C-C','category','KID的C++&&C的学习笔记',0,2,8),(13,'kid&Linux','kid-Linux','category','computerKID的Linux学习笔记',0,4,8),(12,'Java','Java','category','KID的Java学习笔记',0,3,8),(14,'Django','Django','category',NULL,0,9,0);
/*!40000 ALTER TABLE `typecho_metas` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `typecho_options`
--

DROP TABLE IF EXISTS `typecho_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `typecho_options` (
  `name` varchar(32) NOT NULL,
  `user` int(10) unsigned NOT NULL DEFAULT '0',
  `value` text,
  PRIMARY KEY (`name`,`user`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `typecho_options`
--

LOCK TABLES `typecho_options` WRITE;
/*!40000 ALTER TABLE `typecho_options` DISABLE KEYS */;
INSERT INTO `typecho_options` VALUES ('theme',0,'typecho-theme-next-master'),('timezone',0,'28800'),('lang',0,NULL),('charset',0,'UTF-8'),('contentType',0,'text/html'),('gzip',0,'0'),('generator',0,'Typecho 1.1/17.10.30'),('title',0,'Black\'s Blog'),('description',0,NULL),('keywords',0,NULL),('rewrite',0,'1'),('frontPage',0,'recent'),('frontArchive',0,'0'),('commentsRequireMail',0,'0'),('commentsWhitelist',0,'0'),('commentsRequireURL',0,'0'),('commentsRequireModeration',0,'0'),('plugins',0,'a:2:{s:9:\"activated\";a:2:{s:5:\"Links\";a:1:{s:7:\"handles\";a:3:{s:34:\"Widget_Abstract_Contents:contentEx\";a:1:{i:0;a:2:{i:0;s:12:\"Links_Plugin\";i:1;s:5:\"parse\";}}s:34:\"Widget_Abstract_Contents:excerptEx\";a:1:{i:0;a:2:{i:0;s:12:\"Links_Plugin\";i:1;s:5:\"parse\";}}s:34:\"Widget_Abstract_Comments:contentEx\";a:1:{i:0;a:2:{i:0;s:12:\"Links_Plugin\";i:1;s:5:\"parse\";}}}}s:4:\"Snow\";a:1:{s:7:\"handles\";a:2:{s:21:\"Widget_Archive:header\";a:1:{i:0;a:2:{i:0;s:11:\"Snow_Plugin\";i:1;s:6:\"header\";}}s:21:\"Widget_Archive:footer\";a:1:{i:0;a:2:{i:0;s:11:\"Snow_Plugin\";i:1;s:6:\"footer\";}}}}}s:7:\"handles\";a:5:{s:34:\"Widget_Abstract_Contents:contentEx\";a:1:{i:0;a:2:{i:0;s:12:\"Links_Plugin\";i:1;s:5:\"parse\";}}s:34:\"Widget_Abstract_Contents:excerptEx\";a:1:{i:0;a:2:{i:0;s:12:\"Links_Plugin\";i:1;s:5:\"parse\";}}s:34:\"Widget_Abstract_Comments:contentEx\";a:1:{i:0;a:2:{i:0;s:12:\"Links_Plugin\";i:1;s:5:\"parse\";}}s:21:\"Widget_Archive:header\";a:1:{i:0;a:2:{i:0;s:11:\"Snow_Plugin\";i:1;s:6:\"header\";}}s:21:\"Widget_Archive:footer\";a:1:{i:0;a:2:{i:0;s:11:\"Snow_Plugin\";i:1;s:6:\"footer\";}}}}'),('commentDateFormat',0,'F jS, Y \\a\\t h:i a'),('siteUrl',0,'http://www.rootblack.com'),('defaultCategory',0,'1'),('allowRegister',0,'1'),('defaultAllowComment',0,'1'),('defaultAllowPing',0,'1'),('defaultAllowFeed',0,'1'),('pageSize',0,'5'),('postsListSize',0,'10'),('commentsListSize',0,'10'),('commentsHTMLTagAllowed',0,NULL),('postDateFormat',0,'Y-m-d'),('feedFullText',0,'0'),('editorSize',0,'350'),('autoSave',0,'0'),('markdown',0,'1'),('commentsMaxNestingLevels',0,'5'),('commentsPostTimeout',0,'2592000'),('commentsUrlNofollow',0,'1'),('commentsShowUrl',0,'1'),('commentsMarkdown',0,'1'),('commentsPageBreak',0,'0'),('commentsThreaded',0,'1'),('commentsPageSize',0,'20'),('commentsPageDisplay',0,'last'),('commentsOrder',0,'ASC'),('commentsCheckReferer',0,'1'),('commentsAutoClose',0,'0'),('commentsPostIntervalEnable',0,'1'),('commentsPostInterval',0,'61440'),('commentsShowCommentOnly',0,'0'),('commentsAvatar',0,'1'),('commentsAvatarRating',0,'X'),('commentsAntiSpam',0,'1'),('routingTable',0,'a:26:{i:0;a:25:{s:5:\"index\";a:6:{s:3:\"url\";s:1:\"/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:8:\"|^[/]?$|\";s:6:\"format\";s:1:\"/\";s:6:\"params\";a:0:{}}s:7:\"archive\";a:6:{s:3:\"url\";s:6:\"/blog/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:13:\"|^/blog[/]?$|\";s:6:\"format\";s:6:\"/blog/\";s:6:\"params\";a:0:{}}s:2:\"do\";a:6:{s:3:\"url\";s:22:\"/action/[action:alpha]\";s:6:\"widget\";s:9:\"Widget_Do\";s:6:\"action\";s:6:\"action\";s:4:\"regx\";s:32:\"|^/action/([_0-9a-zA-Z-]+)[/]?$|\";s:6:\"format\";s:10:\"/action/%s\";s:6:\"params\";a:1:{i:0;s:6:\"action\";}}s:4:\"post\";a:6:{s:3:\"url\";s:20:\"/black/[cid:digital]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:23:\"|^/black/([0-9]+)[/]?$|\";s:6:\"format\";s:9:\"/black/%s\";s:6:\"params\";a:1:{i:0;s:3:\"cid\";}}s:10:\"attachment\";a:6:{s:3:\"url\";s:26:\"/attachment/[cid:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:28:\"|^/attachment/([0-9]+)[/]?$|\";s:6:\"format\";s:15:\"/attachment/%s/\";s:6:\"params\";a:1:{i:0;s:3:\"cid\";}}s:8:\"category\";a:6:{s:3:\"url\";s:17:\"/category/[slug]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:25:\"|^/category/([^/]+)[/]?$|\";s:6:\"format\";s:13:\"/category/%s/\";s:6:\"params\";a:1:{i:0;s:4:\"slug\";}}s:3:\"tag\";a:6:{s:3:\"url\";s:12:\"/tag/[slug]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:20:\"|^/tag/([^/]+)[/]?$|\";s:6:\"format\";s:8:\"/tag/%s/\";s:6:\"params\";a:1:{i:0;s:4:\"slug\";}}s:6:\"author\";a:6:{s:3:\"url\";s:22:\"/author/[uid:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:24:\"|^/author/([0-9]+)[/]?$|\";s:6:\"format\";s:11:\"/author/%s/\";s:6:\"params\";a:1:{i:0;s:3:\"uid\";}}s:6:\"search\";a:6:{s:3:\"url\";s:19:\"/search/[keywords]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:23:\"|^/search/([^/]+)[/]?$|\";s:6:\"format\";s:11:\"/search/%s/\";s:6:\"params\";a:1:{i:0;s:8:\"keywords\";}}s:10:\"index_page\";a:6:{s:3:\"url\";s:21:\"/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:22:\"|^/page/([0-9]+)[/]?$|\";s:6:\"format\";s:9:\"/page/%s/\";s:6:\"params\";a:1:{i:0;s:4:\"page\";}}s:12:\"archive_page\";a:6:{s:3:\"url\";s:26:\"/blog/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:27:\"|^/blog/page/([0-9]+)[/]?$|\";s:6:\"format\";s:14:\"/blog/page/%s/\";s:6:\"params\";a:1:{i:0;s:4:\"page\";}}s:13:\"category_page\";a:6:{s:3:\"url\";s:32:\"/category/[slug]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:34:\"|^/category/([^/]+)/([0-9]+)[/]?$|\";s:6:\"format\";s:16:\"/category/%s/%s/\";s:6:\"params\";a:2:{i:0;s:4:\"slug\";i:1;s:4:\"page\";}}s:8:\"tag_page\";a:6:{s:3:\"url\";s:27:\"/tag/[slug]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:29:\"|^/tag/([^/]+)/([0-9]+)[/]?$|\";s:6:\"format\";s:11:\"/tag/%s/%s/\";s:6:\"params\";a:2:{i:0;s:4:\"slug\";i:1;s:4:\"page\";}}s:11:\"author_page\";a:6:{s:3:\"url\";s:37:\"/author/[uid:digital]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:33:\"|^/author/([0-9]+)/([0-9]+)[/]?$|\";s:6:\"format\";s:14:\"/author/%s/%s/\";s:6:\"params\";a:2:{i:0;s:3:\"uid\";i:1;s:4:\"page\";}}s:11:\"search_page\";a:6:{s:3:\"url\";s:34:\"/search/[keywords]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:32:\"|^/search/([^/]+)/([0-9]+)[/]?$|\";s:6:\"format\";s:14:\"/search/%s/%s/\";s:6:\"params\";a:2:{i:0;s:8:\"keywords\";i:1;s:4:\"page\";}}s:12:\"archive_year\";a:6:{s:3:\"url\";s:18:\"/[year:digital:4]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:19:\"|^/([0-9]{4})[/]?$|\";s:6:\"format\";s:4:\"/%s/\";s:6:\"params\";a:1:{i:0;s:4:\"year\";}}s:13:\"archive_month\";a:6:{s:3:\"url\";s:36:\"/[year:digital:4]/[month:digital:2]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:30:\"|^/([0-9]{4})/([0-9]{2})[/]?$|\";s:6:\"format\";s:7:\"/%s/%s/\";s:6:\"params\";a:2:{i:0;s:4:\"year\";i:1;s:5:\"month\";}}s:11:\"archive_day\";a:6:{s:3:\"url\";s:52:\"/[year:digital:4]/[month:digital:2]/[day:digital:2]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:41:\"|^/([0-9]{4})/([0-9]{2})/([0-9]{2})[/]?$|\";s:6:\"format\";s:10:\"/%s/%s/%s/\";s:6:\"params\";a:3:{i:0;s:4:\"year\";i:1;s:5:\"month\";i:2;s:3:\"day\";}}s:17:\"archive_year_page\";a:6:{s:3:\"url\";s:38:\"/[year:digital:4]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:33:\"|^/([0-9]{4})/page/([0-9]+)[/]?$|\";s:6:\"format\";s:12:\"/%s/page/%s/\";s:6:\"params\";a:2:{i:0;s:4:\"year\";i:1;s:4:\"page\";}}s:18:\"archive_month_page\";a:6:{s:3:\"url\";s:56:\"/[year:digital:4]/[month:digital:2]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:44:\"|^/([0-9]{4})/([0-9]{2})/page/([0-9]+)[/]?$|\";s:6:\"format\";s:15:\"/%s/%s/page/%s/\";s:6:\"params\";a:3:{i:0;s:4:\"year\";i:1;s:5:\"month\";i:2;s:4:\"page\";}}s:16:\"archive_day_page\";a:6:{s:3:\"url\";s:72:\"/[year:digital:4]/[month:digital:2]/[day:digital:2]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:55:\"|^/([0-9]{4})/([0-9]{2})/([0-9]{2})/page/([0-9]+)[/]?$|\";s:6:\"format\";s:18:\"/%s/%s/%s/page/%s/\";s:6:\"params\";a:4:{i:0;s:4:\"year\";i:1;s:5:\"month\";i:2;s:3:\"day\";i:3;s:4:\"page\";}}s:12:\"comment_page\";a:6:{s:3:\"url\";s:53:\"[permalink:string]/comment-page-[commentPage:digital]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:36:\"|^(.+)/comment\\-page\\-([0-9]+)[/]?$|\";s:6:\"format\";s:18:\"%s/comment-page-%s\";s:6:\"params\";a:2:{i:0;s:9:\"permalink\";i:1;s:11:\"commentPage\";}}s:4:\"feed\";a:6:{s:3:\"url\";s:20:\"/feed[feed:string:0]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:4:\"feed\";s:4:\"regx\";s:17:\"|^/feed(.*)[/]?$|\";s:6:\"format\";s:7:\"/feed%s\";s:6:\"params\";a:1:{i:0;s:4:\"feed\";}}s:8:\"feedback\";a:6:{s:3:\"url\";s:31:\"[permalink:string]/[type:alpha]\";s:6:\"widget\";s:15:\"Widget_Feedback\";s:6:\"action\";s:6:\"action\";s:4:\"regx\";s:29:\"|^(.+)/([_0-9a-zA-Z-]+)[/]?$|\";s:6:\"format\";s:5:\"%s/%s\";s:6:\"params\";a:2:{i:0;s:9:\"permalink\";i:1;s:4:\"type\";}}s:4:\"page\";a:6:{s:3:\"url\";s:7:\"/[slug]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:16:\"|^/([^/]+)[/]?$|\";s:6:\"format\";s:3:\"/%s\";s:6:\"params\";a:1:{i:0;s:4:\"slug\";}}}s:5:\"index\";a:3:{s:3:\"url\";s:1:\"/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:7:\"archive\";a:3:{s:3:\"url\";s:6:\"/blog/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:2:\"do\";a:3:{s:3:\"url\";s:22:\"/action/[action:alpha]\";s:6:\"widget\";s:9:\"Widget_Do\";s:6:\"action\";s:6:\"action\";}s:4:\"post\";a:3:{s:3:\"url\";s:20:\"/black/[cid:digital]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:10:\"attachment\";a:3:{s:3:\"url\";s:26:\"/attachment/[cid:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:8:\"category\";a:3:{s:3:\"url\";s:17:\"/category/[slug]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:3:\"tag\";a:3:{s:3:\"url\";s:12:\"/tag/[slug]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:6:\"author\";a:3:{s:3:\"url\";s:22:\"/author/[uid:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:6:\"search\";a:3:{s:3:\"url\";s:19:\"/search/[keywords]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:10:\"index_page\";a:3:{s:3:\"url\";s:21:\"/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:12:\"archive_page\";a:3:{s:3:\"url\";s:26:\"/blog/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:13:\"category_page\";a:3:{s:3:\"url\";s:32:\"/category/[slug]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:8:\"tag_page\";a:3:{s:3:\"url\";s:27:\"/tag/[slug]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:11:\"author_page\";a:3:{s:3:\"url\";s:37:\"/author/[uid:digital]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:11:\"search_page\";a:3:{s:3:\"url\";s:34:\"/search/[keywords]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:12:\"archive_year\";a:3:{s:3:\"url\";s:18:\"/[year:digital:4]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:13:\"archive_month\";a:3:{s:3:\"url\";s:36:\"/[year:digital:4]/[month:digital:2]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:11:\"archive_day\";a:3:{s:3:\"url\";s:52:\"/[year:digital:4]/[month:digital:2]/[day:digital:2]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:17:\"archive_year_page\";a:3:{s:3:\"url\";s:38:\"/[year:digital:4]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:18:\"archive_month_page\";a:3:{s:3:\"url\";s:56:\"/[year:digital:4]/[month:digital:2]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:16:\"archive_day_page\";a:3:{s:3:\"url\";s:72:\"/[year:digital:4]/[month:digital:2]/[day:digital:2]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:12:\"comment_page\";a:3:{s:3:\"url\";s:53:\"[permalink:string]/comment-page-[commentPage:digital]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:4:\"feed\";a:3:{s:3:\"url\";s:20:\"/feed[feed:string:0]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:4:\"feed\";}s:8:\"feedback\";a:3:{s:3:\"url\";s:31:\"[permalink:string]/[type:alpha]\";s:6:\"widget\";s:15:\"Widget_Feedback\";s:6:\"action\";s:6:\"action\";}s:4:\"page\";a:3:{s:3:\"url\";s:7:\"/[slug]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}}'),('actionTable',0,'a:1:{s:10:\"links-edit\";s:12:\"Links_Action\";}'),('panelTable',0,'a:2:{s:5:\"child\";a:1:{i:3;a:1:{i:0;a:6:{i:0;s:12:\"友情链接\";i:1;s:18:\"管理友情链接\";i:2;s:44:\"extending.php?panel=Links%2Fmanage-links.php\";i:3;s:13:\"administrator\";i:4;b:0;i:5;s:0:\"\";}}}s:4:\"file\";a:1:{i:0;s:24:\"Links%2Fmanage-links.php\";}}'),('attachmentTypes',0,'@image@,@doc@'),('secret',0,'P#ExA85rpce55yC5rK0&33Rd2rhD%HmK'),('autoSave',4,'1'),('theme:typecho-theme-next-master',0,'a:7:{s:9:\"next_name\";s:7:\"妖0孽\";s:13:\"next_gravatar\";s:23:\"1992black@rootblack.com\";s:9:\"next_tips\";s:57:\"别思考了，你使这里弥漫着一股愚蠢的气息\";s:8:\"next_cdn\";s:25:\"http://www.rootblack.com/\";s:7:\"sidebar\";s:1:\"0\";s:13:\"next_comments\";s:0:\"\";s:11:\"search_form\";a:2:{i:0;s:6:\"Motion\";i:1;s:10:\"ShowSearch\";}}'),('autoSave',1,'0'),('markdown',1,'1'),('defaultAllowComment',1,'1'),('defaultAllowPing',1,'0'),('defaultAllowFeed',1,'1'),('plugin:Snow',0,'a:9:{s:6:\"jquery\";s:1:\"1\";s:9:\"snowspeed\";s:1:\"2\";s:11:\"snowgravity\";s:1:\"0\";s:7:\"snownum\";s:3:\"500\";s:7:\"snowway\";s:2:\"-5\";s:9:\"snowfront\";s:1:\"0\";s:11:\"snowrotateX\";s:1:\"0\";s:11:\"snowrotateY\";s:1:\"0\";s:9:\"snowstyle\";s:5:\"Snow2\";}'),('markdown',4,'1'),('defaultAllowComment',4,'1'),('defaultAllowPing',4,'1'),('defaultAllowFeed',4,'1'),('xmlrpcMarkdown',0,'0'),('installed',0,'1'),('allowXmlRpc',0,'2');
/*!40000 ALTER TABLE `typecho_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `typecho_relationships`
--

DROP TABLE IF EXISTS `typecho_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `typecho_relationships` (
  `cid` int(10) unsigned NOT NULL,
  `mid` int(10) unsigned NOT NULL,
  PRIMARY KEY (`cid`,`mid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `typecho_relationships`
--

LOCK TABLES `typecho_relationships` WRITE;
/*!40000 ALTER TABLE `typecho_relationships` DISABLE KEYS */;
INSERT INTO `typecho_relationships` VALUES (6,1),(7,2),(8,3),(10,1),(11,2),(18,4),(19,4),(20,4),(21,5),(22,5),(23,5),(25,5),(26,5),(27,5),(28,6),(29,5),(30,6),(31,6),(32,1),(32,5),(35,1),(40,1),(46,1),(48,1),(53,1),(67,1),(71,1),(77,1),(78,1),(79,1),(80,1),(81,1),(82,1),(83,1),(84,1),(85,1),(87,1),(88,1),(89,1),(90,1),(94,1),(95,5),(96,1),(97,1),(99,1),(100,1),(101,1),(102,1),(103,1),(104,1),(106,1),(107,1),(108,1),(109,1),(110,1);
/*!40000 ALTER TABLE `typecho_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `typecho_users`
--

DROP TABLE IF EXISTS `typecho_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `typecho_users` (
  `uid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(32) DEFAULT NULL,
  `password` varchar(64) DEFAULT NULL,
  `mail` varchar(200) DEFAULT NULL,
  `url` varchar(200) DEFAULT NULL,
  `screenName` varchar(32) DEFAULT NULL,
  `created` int(10) unsigned DEFAULT '0',
  `activated` int(10) unsigned DEFAULT '0',
  `logged` int(10) unsigned DEFAULT '0',
  `group` varchar(16) DEFAULT 'visitor',
  `authCode` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`uid`),
  UNIQUE KEY `name` (`name`),
  UNIQUE KEY `mail` (`mail`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `typecho_users`
--

LOCK TABLES `typecho_users` WRITE;
/*!40000 ALTER TABLE `typecho_users` DISABLE KEYS */;
INSERT INTO `typecho_users` VALUES (1,'black','$P$B/yx7bl9L6eXs4LWx4X4zvc1r2d9oP/','1992black@rootblack.com','http://www.rootblack.com','black',1463583460,1521534011,1521472946,'administrator','5db50c8b671527362b60944af3451ca5'),(7,'fighter','$P$BGqHvVFASbcrI44Xm/6e23vdjIu99I.','551961571@qq.com',NULL,'fighter',1513696444,1513696548,0,'editor','5070270d152e15687b5874aed5618ab2');
/*!40000 ALTER TABLE `typecho_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-05-08  8:56:54
